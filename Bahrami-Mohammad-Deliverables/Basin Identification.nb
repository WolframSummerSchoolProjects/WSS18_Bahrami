(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[     84503,       1707]
NotebookOptionsPosition[     77385,       1607]
NotebookOutlinePosition[     77785,       1624]
CellTagsIndexPosition[     77742,       1621]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Extracting hydrographic basin information from digital elevation models\
\>", "Title",
 CellChangeTimes->{
  3.7400784457806416`*^9},ExpressionUUID->"84c36d7e-0a41-4722-a771-\
ded2d8bc4104"],

Cell[CellGroupData[{

Cell["Get the Digital Elevation Model of a Region", "Section",
 CellChangeTimes->{{3.7400786553872805`*^9, 
  3.740078663635039*^9}},ExpressionUUID->"6a114ce8-2b0d-4427-891f-\
84a8f1fa1f7d"],

Cell["\<\
Define a region ({alt1,long1},{alt2,lon2}) which is confided within the \
altitudes and longitudes of two points \
\>", "Text",
 CellChangeTimes->{{3.740078475951028*^9, 3.7400785881936674`*^9}, {
  3.7400786773975034`*^9, 3.740078679493966*^9}, {3.7406634637052016`*^9, 
  3.740663478157101*^9}},ExpressionUUID->"4063964a-7d7d-4b3f-9a61-\
825dabf86c37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"region", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"35.5", ",", "44"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "48"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7403223764518013`*^9, 3.740322388164847*^9}, {
   3.7403224306845803`*^9, 3.7403224398000965`*^9}, {3.7403225354710946`*^9, 
   3.7403225458901567`*^9}, {3.7403228044668818`*^9, 3.740322873257044*^9}, {
   3.740322940492778*^9, 3.7403229465570555`*^9}, {3.7403234585570645`*^9, 
   3.7403234588096123`*^9}, 3.7406634386537466`*^9},
 CellLabel->
  "In[163]:=",ExpressionUUID->"7e66ddf3-d4b3-4eb3-9d0a-0f9681c16700"],

Cell["Find altitude and longitude corresponding to the region.", "Text",
 CellChangeTimes->{{3.7406634439816976`*^9, 
  3.7406634610410357`*^9}},ExpressionUUID->"2f3d79e0-c4a2-4bac-8db1-\
9a67f8e265fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lat1", ",", "long1"}], "}"}], "=", 
   RowBox[{"region", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"lat2", ",", "long2"}], "}"}], "=", 
   RowBox[{"region", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7403223764518013`*^9, 3.740322388164847*^9}, {
   3.7403224306845803`*^9, 3.7403224398000965`*^9}, {3.7403225354710946`*^9, 
   3.7403225458901567`*^9}, {3.7403228044668818`*^9, 3.740322873257044*^9}, {
   3.740322940492778*^9, 3.7403229465570555`*^9}, {3.7403234585570645`*^9, 
   3.7403234588096123`*^9}, 3.7406634386537466`*^9, 3.740663486635355*^9},
 CellLabel->
  "In[164]:=",ExpressionUUID->"153e0d7b-adfc-4306-b1db-aadb2ecb91ab"],

Cell["Dynamical map of the region", "Text",
 CellChangeTimes->{{3.7406634922749367`*^9, 
  3.740663500362356*^9}},ExpressionUUID->"5fa4921f-52eb-4542-af7c-\
16abaed66d8e"],

Cell[BoxData[
 RowBox[{"DynamicGeoGraphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GeoBoundsRegion", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"{", 
          RowBox[{"lat1", ",", "lat2"}], "}"}], "]"}], ",", 
        RowBox[{"Sort", "[", 
         RowBox[{"{", 
          RowBox[{"long1", ",", "long2"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"GeoMarker", "[", 
      RowBox[{
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"lat1", ",", "long1"}], "}"}], "]"}], ",", 
       RowBox[{"\"\<Color\>\"", "\[Rule]", "Blue"}]}], "]"}], ",", 
     RowBox[{"GeoMarker", "[", 
      RowBox[{
       RowBox[{"GeoPosition", "[", 
        RowBox[{"{", 
         RowBox[{"lat2", ",", "long2"}], "}"}], "]"}], ",", 
       RowBox[{"\"\<Color\>\"", "\[Rule]", "Red"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"GeoRange", "\[Rule]", "\"\<Country\>\""}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Longtitude\>\"", ",", "Bold", ",", "Large"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Altitude\>\"", ",", "Bold", ",", "Large"}], "]"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7403223764518013`*^9, 3.740322388164847*^9}, {
   3.7403224306845803`*^9, 3.7403224398000965`*^9}, {3.7403225354710946`*^9, 
   3.7403225458901567`*^9}, {3.7403228044668818`*^9, 3.740322873257044*^9}, {
   3.740322940492778*^9, 3.7403229465570555`*^9}, {3.7403234585570645`*^9, 
   3.7403234588096123`*^9}, 3.7406634386537466`*^9, 3.740663486635355*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"3e505f4f-0225-4668-b25d-74055de9c009"],

Cell["Get the digital elevation model of the region", "Text",
 CellChangeTimes->{{3.740078692543936*^9, 
  3.7400786972774906`*^9}},ExpressionUUID->"a7f2cdda-bce6-4257-b06c-\
aa3b6f9f6efc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"N", "[", 
    RowBox[{"QuantityMagnitude", "@", 
     RowBox[{"GeoElevationData", "[", 
      RowBox[{"region", ",", 
       RowBox[{"UnitSystem", "\[Rule]", "\"\<Metric\>\""}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740078601375566*^9, 3.7400786050856266`*^9}, {
  3.7400786426239967`*^9, 3.740078667696638*^9}, {3.7402392621966705`*^9, 
  3.7402393191800833`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"357ce150-cf01-4259-b7c9-51acb76c8c61"],

Cell["Convert the DEM data into an image", "Text",
 CellChangeTimes->{{3.74007870142389*^9, 3.740078707203865*^9}, {
  3.7400787615405407`*^9, 
  3.7400787625247073`*^9}},ExpressionUUID->"24798162-3ac3-4621-8a2a-\
89c92ac8342a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mimg", "=", 
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "data", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740078752980022*^9, 3.740078759541439*^9}, 
   3.740239266776003*^9, 3.740239325544977*^9},
 CellLabel->
  "In[167]:=",ExpressionUUID->"c2cae194-e10b-4af9-8b23-559a29ba4d27"],

Cell["Represent the region as a relief map", "Text",
 CellChangeTimes->{{3.740078805022556*^9, 
  3.7400788252834425`*^9}},ExpressionUUID->"36c27535-a030-43b9-97d5-\
4d04984d66e1"],

Cell[BoxData[
 RowBox[{"reliefmap", "=", 
  RowBox[{"ReliefPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"DataReversed", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"BarLegend", "[", 
      RowBox[{"Automatic", ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<elevation(m)\>\""}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7400788636586943`*^9, 3.740078879420499*^9}, {
   3.74022117455169*^9, 3.7402211808826046`*^9}, {3.74032338503946*^9, 
   3.740323476085541*^9}, 3.7403236876659613`*^9, {3.7403237197166204`*^9, 
   3.7403237279914255`*^9}, {3.7403238825977807`*^9, 3.740323887742176*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"9877aaf4-0705-41a2-9687-383277480d5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Obtain sub-basins and label the boundaries of adjacent sub-basins\
\>", "Section",
 CellChangeTimes->{{3.7401570039120393`*^9, 
  3.7401570228505845`*^9}},ExpressionUUID->"b6a7a8fa-6bf2-4b15-8282-\
d0b5590707be"],

Cell["\<\
Find watershed segmentation (i.e., a detailed sub-basin structure) during \
Immersion method b/c the labeling of segments correspond to averaged \
elevation of the sub-basins\
\>", "Text",
 CellChangeTimes->{{3.739966638655505*^9, 3.7399666480137663`*^9}, {
   3.740078922291867*^9, 3.740078983182417*^9}, 
   3.7400790308625546`*^9},ExpressionUUID->"404276d7-6154-4310-9e65-\
95fa4d60b9f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wsc", "=", 
   RowBox[{"WatershedComponents", "[", 
    RowBox[{"mimg", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Immersion\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739896398575884*^9, 3.7398964067783957`*^9}, 
   3.739964483375183*^9, {3.7400576622936354`*^9, 3.7400576880811386`*^9}, {
   3.740058827096938*^9, 3.7400588321608343`*^9}, {3.7400897042705016`*^9, 
   3.7400897045516567`*^9}, {3.7400906178797855`*^9, 3.74009062201982*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"bd5e7c41-1866-4a0b-9426-aaff47ad98fd"],

Cell["Finding the boundaries between water basins:", "Text",
 CellChangeTimes->{{3.739966656114436*^9, 
  3.7399666690278273`*^9}},ExpressionUUID->"e1a0206c-61a3-4818-bf48-\
2e634621f9b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bnds", "=", 
   RowBox[{"ColorNegate", "@", 
    RowBox[{"Image", "[", 
     RowBox[{"wsc", ",", "\"\<Bit\>\""}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.739966691771585*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"d8c4fe48-2ace-4ea9-84df-22cce51b18ff"],

Cell["\<\
Dilate and erode the neighboring basin indices into the boundaries between \
them:\
\>", "Text",
 CellChangeTimes->{{3.73996675557593*^9, 
  3.739966820046859*^9}},ExpressionUUID->"735fa744-c803-4542-bcaa-\
908af9ad6674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindex", "=", 
   RowBox[{"Erosion", "[", 
    RowBox[{
     RowBox[{"Replace", "[", 
      RowBox[{"wsc", ",", 
       RowBox[{"0", "\[Rule]", 
        RowBox[{
         RowBox[{"Max", "[", "wsc", "]"}], "+", "1"}]}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739896491924358*^9, 3.739896492956554*^9}, {
   3.73989666625809*^9, 3.739896729701144*^9}, {3.7398993053374043`*^9, 
   3.739899308859296*^9}, {3.739899354054687*^9, 3.73989937435695*^9}, {
   3.739964548821454*^9, 3.739964556826686*^9}, {3.739964596064855*^9, 
   3.739964609570993*^9}, {3.740054317024548*^9, 3.7400543173813457`*^9}, {
   3.7400790523618546`*^9, 3.7400790544855013`*^9}, {3.740157378104615*^9, 
   3.740157382070619*^9}, 3.7401980594894295`*^9, {3.7401982148923564`*^9, 
   3.740198254235738*^9}, 3.7402701444102063`*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"6dafd0e4-482e-4e0e-908b-7683dcc3f812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tindex", "=", 
   RowBox[{"Dilation", "[", 
    RowBox[{"wsc", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739896411227666*^9, 3.7398964401031303`*^9}, {
   3.739896478430876*^9, 3.739896483006853*^9}, 3.739964561882185*^9, {
   3.739964603646472*^9, 3.739964607265876*^9}, {3.740157368340032*^9, 
   3.7401573752935677`*^9}, 3.740270149105962*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"a796cefd-9728-4124-84f2-ac97341f0fab"],

Cell["\<\
Find all index pairs of adjacent basins. Repetitive index pairs within a \
basin are set to 0:\
\>", "Text",
 CellChangeTimes->{{3.740054927078034*^9, 
  3.740055005515818*^9}},ExpressionUUID->"2281f902-32da-43ac-99cd-\
168f771c4692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doubleIndexArray", "=", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bindex", ",", "tindex"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n_", ",", "n_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740051796402112*^9, 3.740051888378331*^9}, {
   3.740052627295087*^9, 3.7400526301478767`*^9}, 3.740052760714775*^9, {
   3.740052993133322*^9, 3.740053001502252*^9}, 3.740054327402685*^9, {
   3.7400545661020947`*^9, 3.7400545678326263`*^9}, {3.740054599558157*^9, 
   3.740054603895438*^9}, {3.7400549948044357`*^9, 3.740055016985763*^9}, {
   3.740055114690916*^9, 3.740055127094475*^9}, {3.7400591212266073`*^9, 
   3.7400591323542533`*^9}, {3.740059187103361*^9, 3.7400592089469786`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"1b34e5d1-0017-45e0-b865-a14c80e7adda"],

Cell["Find all unique index pairs:", "Text",
 CellChangeTimes->{{3.740055327685183*^9, 
  3.740055339156197*^9}},ExpressionUUID->"a7a38679-3622-49ab-a7d7-\
a7627b1ddc71"],

Cell[BoxData[
 RowBox[{"doubleIndexPairs", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"doubleIndexArray", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740054645973935*^9, 3.7400546620262403`*^9}, 
   3.7400550290674963`*^9, {3.740055131015221*^9, 3.74005514679303*^9}, 
   3.740055720777265*^9, {3.7400559930570707`*^9, 3.74005601019554*^9}, 
   3.740057614692422*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"6452fbb2-5310-40cf-9929-be1b697a5238"],

Cell["\<\
Convert array of index pairs into an array of preliminary integer indices \
(needed for using ComponentMeasurements):\
\>", "Text",
 CellChangeTimes->{{3.740055348459158*^9, 3.74005537243606*^9}, {
  3.740055420926066*^9, 
  3.7400554460962687`*^9}},ExpressionUUID->"bf23e2c9-5bb0-420d-a8e7-\
061e76729e9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bndSegs", "=", 
   RowBox[{"Replace", "[", 
    RowBox[{"doubleIndexArray", ",", 
     RowBox[{"Dispatch", "@", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "\[Rule]", 
          RowBox[{
           RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], "&"}], ",", 
        "doubleIndexPairs"}], "]"}]}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7400519257277718`*^9, 3.740051963009323*^9}, 
   3.7400521082084913`*^9, {3.7400525059077253`*^9, 3.7400525451019*^9}, 
   3.740052648219577*^9, {3.740052705436184*^9, 3.74005272410108*^9}, 
   3.740052767688491*^9, {3.740052889990802*^9, 3.740052890159092*^9}, 
   3.7400530201458473`*^9, 3.740054669748211*^9, {3.7400551512439537`*^9, 
   3.740055168218305*^9}, 3.740220002543537*^9, 3.7402200488222456`*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"6052e686-27fe-42dc-8ae7-7713f6b7f761"],

Cell["\<\
Extract the smallest boundary height between two neighboring basins in \
resubstitute the index pairs for the preliminary integer indices:\
\>", "Text",
 CellChangeTimes->{{3.7399668295126762`*^9, 3.7399668575951147`*^9}, {
  3.7400553850521393`*^9, 
  3.74005541412118*^9}},ExpressionUUID->"001143e0-c317-43a7-8a3f-\
87c1fcb2cc08"],

Cell[BoxData[
 RowBox[{"MinATborders", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"Rest", "[", "doubleIndexPairs", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"ComponentMeasurements", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mimg", ",", "bndSegs"}], "}"}], ",", "\"\<Min\>\""}], "]"}], 
     "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7400531183813953`*^9, 3.740053128152032*^9}, {
   3.740054728299358*^9, 3.740054731928116*^9}, {3.740054764103527*^9, 
   3.740054765268548*^9}, {3.7400548538803263`*^9, 3.7400548844951572`*^9}, {
   3.740055155524213*^9, 3.740055164077312*^9}, {3.740055823697526*^9, 
   3.740055827649317*^9}, {3.740056030011324*^9, 3.740056033093317*^9}, {
   3.7400590396442747`*^9, 3.7400590399410987`*^9}, 3.7400680536903353`*^9, {
   3.7400688725513663`*^9, 3.7400688908836126`*^9}, {3.7400699493798857`*^9, 
   3.7400699505673923`*^9}, {3.740070012363965*^9, 3.7400700540085697`*^9}, {
   3.7400701352206163`*^9, 3.7400701354861336`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"d06acfbe-92cb-43b9-92c6-73d687f09776"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find list of adjacent sub-basins of a given basin", "Section",
 CellChangeTimes->{{3.740157054463894*^9, 
  3.7401570697227187`*^9}},ExpressionUUID->"3963809f-d3ce-4483-a3a1-\
fab1b37e1dbe"],

Cell["\<\
Use the indexes obtained in doubleIndexPairs and find the adjacency neighbors\
\>", "Text",
 CellChangeTimes->{{3.7401395715922976`*^9, 
  3.740139608717559*^9}},ExpressionUUID->"88bf98cc-3e67-4f1e-850d-\
f9b85a6c6b8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g0", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"UndirectedEdge", ",", 
      RowBox[{"Rest", "@", "doubleIndexPairs"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401390477784567`*^9, 3.7401390902753553`*^9}, {
  3.740139244702677*^9, 3.7401393429112167`*^9}, {3.7401393729606676`*^9, 
  3.7401394156003776`*^9}, {3.7401395621392117`*^9, 3.740139562961591*^9}, {
  3.7401396728926945`*^9, 3.740139674144538*^9}, {3.74014021511884*^9, 
  3.7401402296159153`*^9}, {3.7401403269483223`*^9, 3.7401403473458986`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"75d68058-ba56-40d6-b80c-bc6c066f9054"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{
    RowBox[{"WeaklyConnectedGraphComponents", "[", "g0", "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401390477784567`*^9, 3.7401390902753553`*^9}, {
   3.740139244702677*^9, 3.7401393429112167`*^9}, {3.7401393729606676`*^9, 
   3.7401394156003776`*^9}, {3.7401395621392117`*^9, 3.740139562961591*^9}, {
   3.7401396728926945`*^9, 3.740139674144538*^9}, {3.74014021511884*^9, 
   3.740140223808115*^9}, 3.7406638214486237`*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"a140eac7-04fc-4d36-a429-52e96baa3e20"],

Cell[BoxData[
 RowBox[{"basinConnect", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", " ", "->", " ", 
       RowBox[{"AdjacencyList", "[", 
        RowBox[{"g1", ",", "#"}], "]"}]}], "&"}], ",", 
     RowBox[{"VertexList", "[", "g1", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7401390477784567`*^9, 3.7401390902753553`*^9}, {
  3.740139244702677*^9, 3.7401393429112167`*^9}, {3.7401393729606676`*^9, 
  3.7401394156003776`*^9}, {3.7401395621392117`*^9, 3.740139562961591*^9}, {
  3.7401396728926945`*^9, 3.740139674144538*^9}, {3.74014021511884*^9, 
  3.740140223808115*^9}, {3.740229314465383*^9, 3.740229324001066*^9}, {
  3.7402293766858025`*^9, 3.7402294013378177`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"7a310784-8bc1-441d-ad79-5617e57a39c2"],

Cell["Sort basin connections based on the value of boundary", "Text",
 CellChangeTimes->{{3.740141739108306*^9, 
  3.74014174672622*^9}},ExpressionUUID->"d9e54ad8-ab69-4a50-828c-\
abb9b6fd4cb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sortBasin", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Keys", "[", "x", "]"}], "->", 
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{"Values", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Association", "[", "MinATborders", "]"}], "[", 
        RowBox[{"Sort", "[", 
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Keys", "[", "x", "]"}]}], "}"}], "]"}], "]"}], "&"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401417535632267`*^9, 3.7401417619472065`*^9}, {
  3.740229384309016*^9, 3.7402293965544014`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"e4254b43-3b80-4fc9-8e6f-d28a782df13b"],

Cell["\<\
Some of sorted basins have only one adjacent basin (b/c in basinConnect there \
is no more info)\
\>", "Text",
 CellChangeTimes->{{3.740142160837589*^9, 
  3.740142191748456*^9}},ExpressionUUID->"7c9478a6-fe41-4d4c-b29d-\
418798c4d619"],

Cell[BoxData[
 RowBox[{"sortedBasins", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sortBasin", "[", "#", "]"}], "&"}], "/@", 
   "basinConnect"}]}]], "Input",
 CellChangeTimes->{{3.740141776104542*^9, 3.740141789768255*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"3d2fe490-e50a-4453-9ebf-86e4e897d1d2"],

Cell["List of basins that are not vertexes in the graph", "Text",
 CellChangeTimes->{{3.7401399962161984`*^9, 
  3.740140009555582*^9}},ExpressionUUID->"4a236d7b-edd6-4ac2-87c0-\
ee3b3f9123ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonVertexBasins", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Max", "[", "wsc", "]"}], "]"}], ",", 
     RowBox[{"VertexList", "[", "g1", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401394697671432`*^9, 3.740139481807085*^9}, {
   3.7401398623493543`*^9, 3.7401398900960937`*^9}, 3.7401399907382307`*^9, {
   3.740140023727151*^9, 3.740140028283368*^9}, 3.7401403642229776`*^9, {
   3.7401404314617467`*^9, 3.74014045521052*^9}, {3.7401571042599435`*^9, 
   3.7401571182909*^9}, 3.7406641478421764`*^9, 3.740664184772208*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"786b800c-9200-4d15-890f-3200befcc4d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making connections between adjacent basins", "Section",
 CellChangeTimes->{{3.7400570804267187`*^9, 3.7400570830050125`*^9}, {
  3.7401569660915213`*^9, 
  3.740156977488574*^9}},ExpressionUUID->"8cdd11d8-54c3-4f5c-892c-\
aea5bb7886bd"],

Cell["\<\
Using sortedBassins, only choose the first one from Values which is the min \
boundary between neighboring basins\
\>", "Text",
 CellChangeTimes->{{3.7400706626611414`*^9, 3.7400706666136713`*^9}, {
  3.7400792581539392`*^9, 3.740079284785205*^9}, {3.7400799972546854`*^9, 
  3.740080043713519*^9}, {3.7401398009470863`*^9, 3.740139828276702*^9}, {
  3.740142385568862*^9, 
  3.7401424095773296`*^9}},ExpressionUUID->"ed3e1286-6dee-4234-902c-\
9029302ed2f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"minfind", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Keys", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"First", "[", 
     RowBox[{"Values", "[", "x", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7400664580275745`*^9, 3.7400665028298764`*^9}, {
   3.740066643452179*^9, 3.7400666450199494`*^9}, {3.740066684572323*^9, 
   3.7400666888608184`*^9}, {3.740066842457448*^9, 3.7400668512040834`*^9}, {
   3.7400707595960655`*^9, 3.7400707610648365`*^9}, 3.7400792524159765`*^9, {
   3.740089791178618*^9, 3.7400898319819517`*^9}, {3.7400901155024796`*^9, 
   3.740090115565052*^9}, 3.7400902540015416`*^9, {3.7401397849652185`*^9, 
   3.74013978901473*^9}, {3.740142345094489*^9, 3.7401423554097853`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"b12891c6-323d-4a7b-9d6f-48d500b5ec4e"],

Cell["\<\
Apply above function for all sub-basins, the result will be a graph where \
water flows from key to value\
\>", "Text",
 CellChangeTimes->{{3.740079305164853*^9, 
  3.740079364022731*^9}},ExpressionUUID->"fedb846d-f582-487e-a39f-\
f2d033f2f6ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"minfind", "[", "#", "]"}], "&"}], "/@", "sortedBasins"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.740010749863187*^9, 3.740010803152611*^9}, {
   3.740012942370735*^9, 3.7400129474008274`*^9}, {3.7400149254061513`*^9, 
   3.740014926312431*^9}, 3.740014980238778*^9, {3.7400151005849257`*^9, 
   3.740015101053104*^9}, {3.7400156994397173`*^9, 3.740015726042889*^9}, 
   3.7400167398737383`*^9, {3.740022425746235*^9, 3.74002242673038*^9}, {
   3.740022466033722*^9, 3.7400224684086647`*^9}, {3.740022843836291*^9, 
   3.740022844961108*^9}, {3.740052850900283*^9, 3.7400528513595695`*^9}, {
   3.7400624102850714`*^9, 3.740062411199625*^9}, 3.74006257267421*^9, {
   3.7400627112539616`*^9, 3.740062711422512*^9}, 3.7400628328042083`*^9, {
   3.7400631194493723`*^9, 3.740063122712649*^9}, {3.7400631925939465`*^9, 
   3.7400632070982404`*^9}, {3.7400634466661673`*^9, 3.740063447794118*^9}, {
   3.74006495729511*^9, 3.7400649576641626`*^9}, {3.740065047140069*^9, 
   3.740065047622781*^9}, {3.740066783056203*^9, 3.740066803083645*^9}, {
   3.7400668754453115`*^9, 3.7400668915722275`*^9}, {3.740066959006115*^9, 
   3.740066960833214*^9}, {3.7400670847491064`*^9, 3.7400670856567144`*^9}, {
   3.7400678834790964`*^9, 3.7400678839268994`*^9}, {3.7400692483682404`*^9, 
   3.74006924924306*^9}, {3.740069415595231*^9, 3.7400694159548225`*^9}, 
   3.740069780035134*^9, {3.740070368179246*^9, 3.74007037030888*^9}, {
   3.7400704771795397`*^9, 3.7400704817408886`*^9}, {3.7400708933045254`*^9, 
   3.7400708937421045`*^9}, {3.7400709242637415`*^9, 3.740070924526002*^9}, {
   3.7400712893524065`*^9, 3.7400712903840933`*^9}, {3.740071908385068*^9, 
   3.7400719087447715`*^9}, 3.740071940446063*^9, {3.74007214692399*^9, 
   3.740072147783206*^9}, {3.740072966984276*^9, 3.740072967406148*^9}, {
   3.7400732109659834`*^9, 3.740073211606449*^9}, {3.7400735872558966`*^9, 
   3.7400735876621923`*^9}, {3.7400737818218045`*^9, 3.740073782538169*^9}, {
   3.740074243789041*^9, 3.7400742441480207`*^9}, 3.7400743140899477`*^9, {
   3.7400793876085835`*^9, 3.7400794084553556`*^9}, {3.7400869370479836`*^9, 
   3.7400869593879237`*^9}, 3.7400898394333744`*^9, 3.7400902635617867`*^9, 
   3.7401423781642423`*^9, {3.74070389869355*^9, 3.740703906964693*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"d91ab500-67a1-4034-8bb9-3f5905de6ffe"],

Cell[CellGroupData[{

Cell["Loops removal as far as possible", "Subsection",
 CellChangeTimes->{{3.740149539480251*^9, 3.740149545888975*^9}, {
  3.7401525679709067`*^9, 
  3.7401525778492002`*^9}},ExpressionUUID->"91701001-9771-4602-999c-\
311212602fad"],

Cell["\<\
The following piece will remove the cycles until there is no more cycle\
\>", "Text",
 CellChangeTimes->{{3.740251235368301*^9, 
  3.7402512764167743`*^9}},ExpressionUUID->"b1875d16-451b-4ec9-a3f9-\
25470d525480"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"numberOfReplace", "[", 
    RowBox[{"x_", ",", "graph_"}], "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{"First", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Association", "[", "sortedBasins", "]"}], "[", "x", "]"}], 
        ",", 
        RowBox[{
         RowBox[{"Association", "[", "graph", "]"}], "[", "x", "]"}]}], 
       "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740250076740868*^9, 3.740250077568513*^9}, {
   3.7402501994040194`*^9, 3.7402502306464777`*^9}, {3.7402505438106413`*^9, 
   3.7402507144249573`*^9}, {3.7402507755894976`*^9, 
   3.7402507757141476`*^9}, {3.740250846385982*^9, 3.7402508527969456`*^9}, {
   3.740250957751829*^9, 3.7402509819610767`*^9}, {3.740251043824397*^9, 
   3.7402511116364784`*^9}, {3.7402511550220027`*^9, 3.740251161525653*^9}, {
   3.740251204800645*^9, 3.740251231047145*^9}, 3.740271066912262*^9, {
   3.7402711291333876`*^9, 3.7402711373622274`*^9}, {3.740274874485108*^9, 
   3.740274899593034*^9}, {3.7402796375028553`*^9, 3.740279735427842*^9}, {
   3.740280034623972*^9, 3.740280036838908*^9}, {3.7406650536355743`*^9, 
   3.7406650543554735`*^9}, {3.7407035125439296`*^9, 3.740703526626871*^9}, 
   3.740703594913415*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"31851280-2fe1-494b-8ee5-d6bc51a47003"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"replaceRule", "[", 
    RowBox[{"x_", ",", "graph_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "@", 
       RowBox[{
        RowBox[{"Association", "[", "sortedBasins", "]"}], "[", "x", "]"}]}], 
      "\[GreaterEqual]", " ", 
      RowBox[{"numberOfReplace", "[", 
       RowBox[{"x", ",", "graph"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Association", "[", "sortedBasins", "]"}], "[", "x", "]"}], 
         ")"}], "\[LeftDoubleBracket]", 
        RowBox[{"numberOfReplace", "[", 
         RowBox[{"x", ",", "graph"}], "]"}], "\[RightDoubleBracket]"}], 
       ")"}]}], ",", "Nothing"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cycleRemoval", "[", "graph_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newData", ",", "vertexesCycle", ",", "cycleCorrection", ",", 
       "cycles"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cycles", "=", 
       RowBox[{"FindCycle", "[", 
        RowBox[{"graph", ",", "Infinity", ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vertexesCycle", "=", 
       RowBox[{"Min", "/@", 
        RowBox[{"(", 
         RowBox[{"VertexList", "/@", "cycles"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cycleCorrection", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"replaceRule", "[", 
          RowBox[{"#", ",", "graph"}], "]"}], "&"}], "/@", 
        "vertexesCycle"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"newData", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"graph", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"First", "[", 
              RowBox[{
               RowBox[{"Association", "[", "sortedBasins", "]"}], "[", "#", 
               "]"}], "]"}]}], "&"}], ",", "vertexesCycle"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Union", "[", 
       RowBox[{"newData", ",", "cycleCorrection"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.740250076740868*^9, 3.740250077568513*^9}, {
   3.7402501994040194`*^9, 3.7402502306464777`*^9}, {3.7402505438106413`*^9, 
   3.7402507144249573`*^9}, {3.7402507755894976`*^9, 
   3.7402507757141476`*^9}, {3.740250846385982*^9, 3.7402508527969456`*^9}, {
   3.740250957751829*^9, 3.7402509819610767`*^9}, {3.740251043824397*^9, 
   3.7402511116364784`*^9}, {3.7402511550220027`*^9, 3.740251161525653*^9}, {
   3.740251204800645*^9, 3.740251231047145*^9}, 3.740271066912262*^9, {
   3.7402711291333876`*^9, 3.7402711373622274`*^9}, {3.740274874485108*^9, 
   3.740274899593034*^9}, {3.7402796375028553`*^9, 3.740279735427842*^9}, {
   3.740280034623972*^9, 3.740280036838908*^9}, {3.7406650536355743`*^9, 
   3.7406650543554735`*^9}, {3.7407035125439296`*^9, 3.740703526626871*^9}, 
   3.740703594913415*^9, {3.7407037086786804`*^9, 3.7407037589951997`*^9}, {
   3.740703795447633*^9, 3.740703818241287*^9}, {3.740704361263389*^9, 
   3.740704397439892*^9}, {3.7407049207956257`*^9, 3.7407049227572145`*^9}, {
   3.7407054778974156`*^9, 3.7407055116912727`*^9}, {3.7407056725376425`*^9, 
   3.7407056985176344`*^9}, {3.740705888865048*^9, 3.7407059055369396`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"f9b1c30e-679f-4b2d-94a6-83ebcc9026c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testLoop", "[", "net_", "]"}], ":=", 
   RowBox[{"Length", "@", 
    RowBox[{"Select", "[", 
     RowBox[{"net", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Keys", "[", "#", "]"}], "<", 
          RowBox[{"Values", "[", "#", "]"}]}], ")"}], "&&", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"net", ",", 
          RowBox[{
           RowBox[{"Values", "[", "#", "]"}], "\[Rule]", 
           RowBox[{"Keys", "[", "#", "]"}]}]}], "]"}]}], "&"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"efffc2c9-a506-4491-a8cc-712f937bd909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newgData", "=", 
   RowBox[{"NestWhile", "[", 
    RowBox[{"cycleRemoval", ",", "gData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"testLoop", "[", "#", "]"}], "\[NotEqual]", " ", 
       RowBox[{"testLoop", "[", 
        RowBox[{"cycleRemoval", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.740250076740868*^9, 3.740250077568513*^9}, {
   3.7402501994040194`*^9, 3.7402502306464777`*^9}, {3.7402505438106413`*^9, 
   3.7402507144249573`*^9}, {3.7402507755894976`*^9, 
   3.7402507757141476`*^9}, {3.740250846385982*^9, 3.7402508527969456`*^9}, {
   3.740250957751829*^9, 3.7402509819610767`*^9}, {3.740251043824397*^9, 
   3.7402511116364784`*^9}, {3.7402511550220027`*^9, 3.740251161525653*^9}, {
   3.740251204800645*^9, 3.740251231047145*^9}, 3.740271066912262*^9, {
   3.7402711291333876`*^9, 3.7402711373622274`*^9}, {3.740274874485108*^9, 
   3.740274899593034*^9}, {3.7402796375028553`*^9, 3.740279735427842*^9}, {
   3.740280034623972*^9, 3.740280036838908*^9}, {3.7406650536355743`*^9, 
   3.7406650543554735`*^9}, {3.7407035125439296`*^9, 3.740703526626871*^9}, 
   3.740703594913415*^9, {3.7407037086786804`*^9, 3.7407037589951997`*^9}, {
   3.740703795447633*^9, 3.740703818241287*^9}, {3.740704361263389*^9, 
   3.740704397439892*^9}, {3.7407049207956257`*^9, 3.7407049227572145`*^9}, {
   3.7407054778974156`*^9, 3.7407055116912727`*^9}, 3.740705549517024*^9, 
   3.740705709379587*^9, 3.7407058507016134`*^9, {3.740705911361974*^9, 
   3.740705913834914*^9}, 
   3.7407061143088465`*^9},ExpressionUUID->"950b1b49-866a-43de-aa4a-\
1d13d82c89ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the graph of connected sub-basins", "Section",
 CellChangeTimes->{{3.740149577649214*^9, 3.740149578339382*^9}, {
  3.740157148084733*^9, 
  3.740157163582835*^9}},ExpressionUUID->"dd015054-9635-4599-a88b-\
720e758e2a8a"],

Cell["\<\
Find the graph from connected basins where the location of each vertex \
represents the centroid of the basin on the map\
\>", "Text",
 CellChangeTimes->{{3.740079415413449*^9, 
  3.740079442697639*^9}},ExpressionUUID->"3a576616-6237-4268-a6bc-\
30b6b5aa5400"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"newgData", ",", " ", 
     RowBox[{"VertexCoordinates", " ", "->", 
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{
        RowBox[{"MaxFilter", "[", 
         RowBox[{"wsc", ",", "1"}], "]"}], ",", " ", "\"\<Centroid\>\""}], 
       "]"}]}], ",", " ", "\n", 
     RowBox[{"VertexSize", " ", "->", " ", "2"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "None"}], ",", 
     RowBox[{"VertexLabelStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"EdgeStyle", "\[Rule]", "Thick"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740148652111799*^9, 3.7401486668275023`*^9}, {
   3.7401489289330044`*^9, 3.7401489302261295`*^9}, {3.7401501560962877`*^9, 
   3.7401501565987053`*^9}, 3.740150319047882*^9, 3.740150428030097*^9, {
   3.7401509938868985`*^9, 3.740150995537289*^9}, 3.7401510944739523`*^9, 
   3.7401513944870467`*^9, 3.7401524282657027`*^9, {3.7402220035631337`*^9, 
   3.7402220044831257`*^9}, {3.7402258406169076`*^9, 
   3.7402258411483154`*^9}, {3.7402261281892138`*^9, 3.740226128926041*^9}, 
   3.7402286782674093`*^9, {3.7402288508321004`*^9, 3.7402288513689404`*^9}, {
   3.74022913223604*^9, 3.7402291331273727`*^9}, {3.7402292338278756`*^9, 
   3.740229237778034*^9}, {3.7402297996576743`*^9, 3.7402298000386477`*^9}, {
   3.740235580194729*^9, 3.740235585926406*^9}, 3.7402358104271994`*^9, {
   3.7402405909854813`*^9, 3.740240593664143*^9}, {3.7402426904726653`*^9, 
   3.7402426909139977`*^9}, {3.740246535551856*^9, 3.740246536837579*^9}, {
   3.7402468345610847`*^9, 3.740246835123072*^9}, 3.7402501193876286`*^9, 
   3.740250254340645*^9, 3.740250696401387*^9, {3.7402749562150545`*^9, 
   3.740274957692974*^9}, {3.740277172298149*^9, 3.740277173016035*^9}, {
   3.7407015979718523`*^9, 3.7407015990953236`*^9}, {3.740704446669992*^9, 
   3.7407044470946903`*^9}, {3.740704498991742*^9, 3.7407045275187793`*^9}, {
   3.740704708700135*^9, 3.740704709732685*^9}, 3.740705572916768*^9, {
   3.7407056144277506`*^9, 3.7407056147396774`*^9}, 
   3.7407061172848444`*^9},ExpressionUUID->"1fadba66-626c-4803-9a73-\
5db264ded9e3"],

Cell["Find the independent components of basin networks", "Text",
 CellChangeTimes->{{3.740079506914104*^9, 
  3.740079538147084*^9}},ExpressionUUID->"a579f908-0ccb-426f-81c9-\
ccb3a982c342"],

Cell[BoxData[
 RowBox[{
  RowBox[{"comp", "=", 
   RowBox[{"WeaklyConnectedComponents", "[", "g", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740010749863187*^9, 3.740010803152611*^9}, {
   3.740012942370735*^9, 3.7400129474008274`*^9}, {3.7400149254061513`*^9, 
   3.740014926312431*^9}, 3.740014980238778*^9, {3.7400151005849257`*^9, 
   3.740015101053104*^9}, {3.7400156994397173`*^9, 3.740015726042889*^9}, 
   3.7400167398737383`*^9, {3.740022425746235*^9, 3.74002242673038*^9}, {
   3.740022466033722*^9, 3.7400224684086647`*^9}, {3.740022843836291*^9, 
   3.740022844961108*^9}, {3.740052850900283*^9, 3.7400528513595695`*^9}, {
   3.7400624102850714`*^9, 3.740062411199625*^9}, 3.74006257267421*^9, {
   3.7400627112539616`*^9, 3.740062711422512*^9}, 3.7400628328042083`*^9, {
   3.7400631194493723`*^9, 3.740063122712649*^9}, {3.7400631925939465`*^9, 
   3.7400632070982404`*^9}, {3.7400634466661673`*^9, 3.740063447794118*^9}, {
   3.74006495729511*^9, 3.7400649576641626`*^9}, {3.740065047140069*^9, 
   3.740065047622781*^9}, {3.740066783056203*^9, 3.740066803083645*^9}, {
   3.7400668754453115`*^9, 3.7400668915722275`*^9}, {3.740066959006115*^9, 
   3.740066960833214*^9}, {3.7400670847491064`*^9, 3.7400670856567144`*^9}, {
   3.7400678834790964`*^9, 3.7400678839268994`*^9}, {3.7400692483682404`*^9, 
   3.74006924924306*^9}, {3.740069415595231*^9, 3.7400694159548225`*^9}, 
   3.740069780035134*^9, {3.740070368179246*^9, 3.74007037030888*^9}, {
   3.7400704771795397`*^9, 3.7400704817408886`*^9}, {3.7400708933045254`*^9, 
   3.7400708937421045`*^9}, {3.7400709242637415`*^9, 3.740070924526002*^9}, {
   3.7400712893524065`*^9, 3.7400712903840933`*^9}, {3.740071908385068*^9, 
   3.7400719087447715`*^9}, 3.740071940446063*^9, {3.74007214692399*^9, 
   3.740072147783206*^9}, {3.740072966984276*^9, 3.740072967406148*^9}, {
   3.7400732109659834`*^9, 3.740073211606449*^9}, {3.7400735872558966`*^9, 
   3.7400735876621923`*^9}, {3.7400737818218045`*^9, 3.740073782538169*^9}, {
   3.740074243789041*^9, 3.7400742441480207`*^9}, 3.7400743140899477`*^9, {
   3.7400793876085835`*^9, 3.7400793924979105`*^9}, {3.740079451395749*^9, 
   3.740079459082977*^9}, {3.7400794931765194`*^9, 3.74007952887668*^9}, 
   3.740148595672871*^9, 3.7401486574847145`*^9, 3.740150322217499*^9},
 CellLabel->
  "In[192]:=",ExpressionUUID->"171c450e-fbd4-493c-a780-6b4fad9be6f2"],

Cell["\<\
Highlight those independent components on the actual graph with vertexes \
correspond to actual locations on the map\
\>", "Text",
 CellChangeTimes->{{3.740079541850024*^9, 
  3.7400795800031548`*^9}},ExpressionUUID->"8329bc81-46bc-4f8d-be59-\
6302818e3ce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"connections", "=", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Subgraph", "[", 
        RowBox[{"g", ",", "#"}], "]"}], " ", "&"}], " ", "/@", "comp"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740010749863187*^9, 3.740010803152611*^9}, {
   3.740012942370735*^9, 3.7400129474008274`*^9}, {3.7400149254061513`*^9, 
   3.740014926312431*^9}, 3.740014980238778*^9, {3.7400151005849257`*^9, 
   3.740015101053104*^9}, {3.7400156994397173`*^9, 3.740015726042889*^9}, 
   3.7400167398737383`*^9, {3.740022425746235*^9, 3.74002242673038*^9}, {
   3.740022466033722*^9, 3.7400224684086647`*^9}, {3.740022843836291*^9, 
   3.740022844961108*^9}, {3.740052850900283*^9, 3.7400528513595695`*^9}, {
   3.7400624102850714`*^9, 3.740062411199625*^9}, 3.74006257267421*^9, {
   3.7400627112539616`*^9, 3.740062711422512*^9}, 3.7400628328042083`*^9, {
   3.7400631194493723`*^9, 3.740063122712649*^9}, {3.7400631925939465`*^9, 
   3.7400632070982404`*^9}, {3.7400634466661673`*^9, 3.740063447794118*^9}, {
   3.74006495729511*^9, 3.7400649576641626`*^9}, {3.740065047140069*^9, 
   3.740065047622781*^9}, {3.740066783056203*^9, 3.740066803083645*^9}, {
   3.7400668754453115`*^9, 3.7400668915722275`*^9}, {3.740066959006115*^9, 
   3.740066960833214*^9}, {3.7400670847491064`*^9, 3.7400670856567144`*^9}, {
   3.7400678834790964`*^9, 3.7400678839268994`*^9}, {3.7400692483682404`*^9, 
   3.74006924924306*^9}, {3.740069415595231*^9, 3.7400694159548225`*^9}, 
   3.740069780035134*^9, {3.740070368179246*^9, 3.74007037030888*^9}, {
   3.7400704771795397`*^9, 3.7400704817408886`*^9}, {3.7400708933045254`*^9, 
   3.7400708937421045`*^9}, {3.7400709242637415`*^9, 3.740070924526002*^9}, {
   3.7400712893524065`*^9, 3.7400712903840933`*^9}, {3.740071908385068*^9, 
   3.7400719087447715`*^9}, 3.740071940446063*^9, {3.74007214692399*^9, 
   3.740072147783206*^9}, {3.740072966984276*^9, 3.740072967406148*^9}, {
   3.7400732109659834`*^9, 3.740073211606449*^9}, {3.7400735872558966`*^9, 
   3.7400735876621923`*^9}, {3.7400737818218045`*^9, 3.740073782538169*^9}, {
   3.740074243789041*^9, 3.7400742441480207`*^9}, 3.7400743140899477`*^9, {
   3.7400793876085835`*^9, 3.7400793924979105`*^9}, {3.740079451395749*^9, 
   3.740079459082977*^9}, {3.7400794931765194`*^9, 3.74007952887668*^9}, {
   3.74008715643839*^9, 3.7400871583600674`*^9}, 3.7400872310931387`*^9, {
   3.740148598434969*^9, 3.740148600983882*^9}, {3.7401486591442094`*^9, 
   3.7401486608281317`*^9}, {3.740150324940773*^9, 3.740150337453396*^9}, {
   3.7402216901413307`*^9, 3.74022169042192*^9}, 3.7402291453874645`*^9, {
   3.7402355505568066`*^9, 3.7402355760803604`*^9}, 3.7402358492784023`*^9, 
   3.740704704361305*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"ac4de9fc-8233-42ef-9c80-afb4f2cc6cdf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"mimg", "*", 
      RowBox[{"Image", "[", 
       RowBox[{"wsc", ",", "\"\<Bit\>\""}], "]"}]}], "]"}], ",", 
    "connections", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"4000", ",", "4000"}], "}"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7407046830223064`*^9, 3.7407046847910643`*^9}, {
   3.740704732410244*^9, 3.740704736049482*^9}, 3.74070562277536*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"c7f38113-a5f0-4ba8-814d-f0b31d89f362"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"mimg", "*", 
     RowBox[{"Image", "[", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJzs3cGOJFu/3uUWA+ShB2fAwAOzhBBCyCPkKcu3YK7gIJkREpI9QAy4Ty6D
S8Af9Nq7+98VFRGZEfmuiHh+g/N4766uysqMqo717nJ///X/8r//+//1v/jx
48d/+hf/+f/8+3/+P/7df/yP//x//s//5T/+4T/88//2b//H//CPX/y//vP/
+b//8f/4//qv+rMd/ctOkuT9HP2LTpIkeY61/+d/4oz+Veehlv6pkzza9H6c
dpTeF0iSPMNa+nxLkiTvYy29z/J7/6rzFH+W3vnIO5rej9OO0vsCSZJnOkqf
c0mS5H0cpXdZ/u7oj9161HmKP0vvfOQdTe/HaWvpfYEkyTOspc+7JEny+o7S
ey1/bKvzVH+W3vnIO5rej2dxlN4XSJI801H6vEuSJK9vLb3fPt3FOk+1lN75
yDua3o1nsZbeF0iSPMNR+rxLkiTvYy294/LH73Ue6kLpfY+8s+ndeDZH6X2B
JMkjraXPuSRJ8n6O0rstf2yr8yV/lt7zyCeZ3otnc5TeGUiSPMJa+lxLkiTv
6yi92/J7/6rzJX+W3vPIJ5nei2dztHTuT+8QJEnucZQ+z5IkyftaS++z/N6/
6nzJn6X3PPJJpvfi2dxaeo8gSXKLS6XPuSRJ8j6O0rsst/lX/WYudfT7+1l6
zyOfZHovvpqj9B5BkuQr1tLnXZIkeX1H6V2W3/tH/Wb+7J/KP//R2q+X0rsd
yfwefDVr6R2CJMk91tLnXZIkeX1H6X2W3/tX/ab+bGn/Wiq9y5G0X/s5bJIk
/3aUPueSJMn7OErvs/zev+o39WfpnY2k/XoWa+k9giTJLY7S51ySJHl9a+l9
lt/7V/1mltI7G0n7ddpaeocgSXKPo/R5lyRJXs+l0rsst/lX/ab+LL2zkbRf
px2l9weSJF9xlD7/kiTJ6zlK77B8zT/qN7GU3tlI2q/TjtL7A0mSrzhKn39J
kuR1rKV3WL7n5vpkrpTe10jar2dxlN4fSJLcYy19DiZJktdxlN5d+Rn/qk/q
z9J7Gkn79ayO0jsESZJ7HKXPvyRJ8jrW0rsqP+Nf9Un9WXpPI2m/ntVReocg
SXKPtfR5mCRJzudS6T2Vn/Wv+qT+LL2nkbRfz2otvUeQJLnFUfpcTJIk57OW
3k+Z9a/6pP4svaeRtF/P7lLpfYIkya8cpc/HJElyHmvp3ZRz+Fd9Un+W3tNI
2q+vZi29U5Ak+auj9DmZJEnO4yi9l3Iu/6hP5s/SexpJ+/VVraX3CpIkvyp9
XiZJkjlr6b2Uc/pHfRJ/lt7TSNqvr+4ovVeQJPmro/S5mSRJ5hyl91Few7/q
k/iz9J5G0n59dUfpnYIkyV8dpc/NJEky5yi9i/Ia/lEP+7P0nkbSfn11a1v3
hK1vT5LkK9bS52eSJPl5R+ldlNfyr3rYn6X3NJL267v4bumdgyR5T0fp8zNJ
kvyctfQeymv5V/3DLpTe00jar5/uWundgyR5bUfpczRJkvyco/QOymu6Wl/5
90u/vrH0fkbSfs1tjtK7B0ny2m4tfc4mSZLHOUrvoLyXr5bew0hex/Qey32O
0rsHSfLebi19DidJktsdpfdO3stRet8ieV/Teyz3OUrvGiTJZztKn8NJkuR2
l0rvn7ymtfS+RfK+pvdY7rOW3i9Iks+0lj6PkyTJ7Y7S+yev7Si9a5G8v+k9
lq9ZS+8YJMlnOkqfw0mS5HZr6R2U17KW3rVI3t/0Dsv3HKX3C5LkM62lz+Mk
SXLdWnoP5dwuld6zSD7H9P7K91wqvWeQJJ9lLX0uJ0mSy47SuyjndKn0fkXy
uab3Vx5rLb1nkCSf5Sh9LidJkn9aS++knNNReq8iyWF6b+U51tJ7BknyGdbS
53SSJPm3o/Q+yjmtpfcqkhymd1ae6yi9Z5Akn2UtfV4nSZJ/l95JOYdLpXcq
kqym91WeYy29Y5Akn+kofV4nSZJ/l95NOYej9C5Fkmumd1Yeay29W5Akn20t
fW4nSfLJjtK7KedwlN6lSHLN9N7KYx2l9wqSJH91lD63kyT5ZGvp/ZSfca30
LkWSa6b3Vh7rKL1TkCT5q6Ot5+n0+Z7nWEs/HpJ8qrX0vspzrKX3J5J81fTe
ymOspXcKkiR/9ajS533uc6304yPJp1tL76081lp6fyLJV03vrvzdtfzcNUny
idbS5/2nuzevJ0nObS29u/JYR+n9iSRfNb3X8ndHa+e8pdL7AkmSZzpKn/Of
7uio13OU/rxI8ukuld5f+Z6j9P5Ekq+a3mv5u6P0PkCS5EzW0uf7uzh6dc/w
+pLkvRz9U/nnpdK7LLdZS+9QJLnX9F7LH1+W3glIkpzBWvpcfxdf7VOvd/r5
IcmnWlvaEY4qves+zVF6hyLJvaZ3W/74rfROQJLkTI7S5/mru1T69V16vUfp
540kn+rorB1ilN5zn+YovUOR5F7Tu+3TraXPjSRJzuQofY6/mkulX8+tr/co
/TyS5FMdnbVDjNJ77tMcpXcoktxrer99qrX0eZEkyRkdpc/xV7GWfv283iR5
TUdn7RC19K57d2vpHYok95recZ/qKH1OJElyZkfpc/zs1tKvm9ebJK/t6Ow9
opbeee9uLb1HkeRW0zvuUx2lz4kkSc5oLX2On82l0q/bUa97+vklyac7+tQu
MUrvu09xlN6jSHKr6R33qdbS50WSJBOulT6/z+oo/fqddT2kn1+SfLqjT+0S
o/Su+xRH6T2KJLea3nGf7ih9XiRJ8pPW0uf0qzlKv45nXRfp55ckn2rtU7vE
KL3rPsVReo8iya2m99unO0qfF0mS/IS19Dn9qo7Sr+dZ10f6+SXJpzr69C4x
Su+6d7eW3qNIcqvp/fbpjtLnRZIkz3Cp9Pn86o7Sr+/Z10v6eSZ5PWtL/77+
+lNd6tO7xCi9797VWnqHIsm9pvfbp1tLnxtJkjzSUfp8fjdr6dfZdUPybI9q
nIOXmvXzW/t9736c9C5RS++9V7NmtyZ5N9P7LX/8Vvq8SJLkkY6OOten95PZ
HKVf51mvG5L3cXTWubj2qc+ntva4Xu1Tz+NRr0N6D76KW0u/riT5rundlj++
LH1uJEnyCEd7z/Nr5/v0jpLabZZKv87p64bk/R2dfT6u3e3z+dTHPerxpvfh
Wa2lXzeSPNv0bsvfHaXPjSRJHmFt7Ry/1N73dzdH6dczdd2M0q8Dyfz3wdHZ
5+TaVT+Pq7rUp35e+ayPf/R+nX6dSPJTpvda/u4ofW4kSfJIa0vn+aPe312s
pV/HWa8fks9x9Knzcu3Vx1tL7wBXc6lX9+p3P356t3718yDJq5rea/njy9Ln
RJIkz3Ctd99felc5a6dJv26zOEq/LiRz3w9Hnz43v1v63H839zbLdbDU2fs7
SV7d9G77dGvpcyFJkle0lt5Zjt5p0s/vLI7Srw/J3PfF9PmZPNKtpR8nSaZN
77dPtZY+D5IkeQdr6b3l3Z1mlH5eZ7GWfp1Ifv77Yfr8TJIkP296x32atfQ5
kCTJO7pWeo/Zu9ukn8/ZXCr9epE8/vvfKH1uJkmSOdN77lOspc99JEk+0Vp6
n9m636Sft9mtpV83kvu/zy2VPi+TJMm8s+26W0s/7lc/n/T5jiRJ/ll6v1nb
c9LP11UcpV8/kvu/36XPxSRJcl5n2XtfPW+OUnu0n68mSfK61tI7Tt1z0s/P
1aylX0eS69/nRulzMUmSnNer7ddr55TR2Y9vqfS5jSRJ7net1K6Tfl6uai29
05Fc/j6XPg+TJMn5vfp+vff8+WrpcxhJkvy8Nfv1tayl9zryia6VPg+TJMn5
vdt+TZIkebS1T+086c/7LtbWdrX03kfewVr63EuSJK+r/ZokSXKbtbP2nvTn
eVeXqr+e3v3IK1tLn3dJkuT1tV+TJEnuc7R3z7Ffz23t03tfenck37GWPueS
JMn7aL8mSZLc57ut7T7pz+/pbm3tddy796X3R97TtY5+v+nzLUmSvJ/p3XqU
PqeQJEme7Vrpx8dtnlV65+S9rNVzYO3V/Tt9niVJkvfXbk2SJEnmHKX3Tt7D
2tp5cGvpcytJknyudmuSJEky5yi9e/KaLpU+Z5IkSR6l3ZokSZLMWUvvobyW
o/S5kiRJ8izt1iRJkmTeUXoP5TWspc+VJEmSZ3n2fp0+B5AkSZJXsJbeRzmn
tfR5kiRJ8myP+vnqpdLnAJIkSfJKjtI7Ked0lD5HkiRJfko/X02SJEnOYy29
l3IOa+lzJEmS5Kd89+es0/f3JEmS5B2tpfdTZqylz48kSZKf1s9ZkyRJkvM6
Su+o/IxLpc+NJEmSKbeWvm8nSZIkn+hS6Z2Vx1pLnxNJkiRnMX0/TpIkSXK7
o/TeyvdcKn0+JEmSnM30/TdJkiTJ7Y7S+yu3uVb6PEiSJDm76ftvkiRJktut
pfdZ/vitpd06fe4jSZK8qun7b5IkSZLbraV326e7Vvq8R5IkeXXT998kSZIk
tztK77b88Vvpcx1JkuRdTd9/kyRJktzuKL3b8sdvpc91JEmSdzV9/02SJEly
u0vVPTW96z7FUfpcR5IkeVfT998kSZIkX3ep9K57d2vpcx1JkuRdTd9vkyRJ
kjzOpdJ77918tbXz2drve/X9kiRJXtX0/TVJkiTJ81wqvf+md+aj3u+/7ttc
qp7P6vtdau3Xl94/SZLk1UzfT5MkSZI8z9HWvbO2tNvOskMvPd7a1s9/78fd
ul9v3bPffb9L7z997iRJknzV9P00SZIkyeOtHb2vjj69X+99vLPsySm3lj6X
kiRJLpm+ryZJkiR5nqNP7aJn/5x1eg++m7X0+ZQkSbKavp8mSZIkeZyj+s+z
/Jzv1tK77tOspc+pJEmSw/T9NUmSJMnjraX3UV7DWvq8SpIkmb6vJkmSJHmc
tfQeymtaS59bSZLkc03fX5MkSZI8zlF6/+Q9fLX0OZckSd7H9P01SZIkyeMc
pXdPPtNa+rxLkiSvb/r+miRJkuRxjtI7Jp/tKH3eJUmS1zd9f02SJEnyOEfp
/ZLPtpY+95Ikyeuavr8mSZIkeZyj9H5J/lr63DuLo/TjIEnySqbvr0mSnMlR
+nEsPZ7ZHh/J+Ryld0vyq9Ln35RbSz9OkiRnNH1/TZJk0rP69ONKP48k89bS
uyX5q7V6Lt1b6vy89fEstfX5WXq/JEk+0fR9NkmSR/pqZ53PR68+/lc/3t6P
S/J6LpXeKcnvXOvd3/9u45y81lGfz9GfZ3pfIEnyDNP33SRJvuNS6fP5u+fP
oz/uq89n+vUluf71mv4+R97BpdKPa+/jT+8LJEmeYfq+m3yiS6UfFzmza6XP
jbN6VOnXn7yiSx39/tLfZ0jmHaX3BZIkzzB9X89nulb68X3q8673m7X04yVn
sJY+Hz7N2tbXK33dkDM4Wvvzvrb1/ZHkcJTeF2Z5HCTJe5m+r+ccjj71cUb/
qv/upx5H6vkdbb3/XOqox3HWxyG3ODrq64bnWnv1+0v6uuO93Nqrv2/r+1l7
v69+nS29//T3A5LzOXp3H9j7fl4tvYOQJK9l+tzBc3y3sz9u3a3rfv3u4zjr
eXz38z/qvvTd9n6c9OvAa3l06fMgf3etvb8vfb1yLpdae7ujr9d3//w9++st
/X2A5HwutbYH7G3p9737OF99HCTJZ5g+p/AYR/Wfl3bid/fjtfZ+3LXHsfZ4
jjonb/381krfv551H5y+zjm3tfT1y7ldKn0d87MutXXnSF/HJDmrtboD1Pa+
v62/7+zPq5beV0iS55g+t/AYlzp6Pz7q/b/6eM5+vmrp+85ZfLX01wXPdan0
9cprWktf3/zeo0tffyR5V9dKP76zP8/03kKSPMb0+Yfb3Nqn9uRPe1bp+6y7
Okp/3fAca+nrjfeylr7e+bu19PVCkuRX1pb2kK1vR5LMmj4HvXt+OurtZrWW
3pGvYi19//Q0a+mvo1m+H13dWvo64z0dpa93fu0ofZ2QJLnFo0vvNyT5VNPn
oHf3k72lH/+rn296D76qo/R901Mdpb+OPv19ppb+fI5+HtLXFe/tUumvh6db
S18nJEl+0qU+tdusfby1x/Xpx0uSR5s+D31qz62lz3173z69A1/NWvp+56nW
0t8/Pr3PjNKf17vPR/o64rOtpb8unmYtfT2QJDmDtb07zFpb3+6s0jsVSVbT
56JXz1FH7ZpH785rv39v6R34Ki6Vvq/hjy9Lfx/51D5TS3+eszwv5CuO0l8X
T7GWfv1JkpzRd9v6/mb5fNL7Fcnnmj4fvbr7nrV3bm3v407vu3e3lr6P4dcu
dfb3i62d/Xmnv6+++/ymrx8+29EsXw9LpR+f3ZokSR5tLb1jkXye6XPS2vkp
vYu+ununH+dTHaX/fOc2a+/uR+nPZ+3zTH9ffXfvTz+PfLajs78uXv1+s9TR
X5d2a5IkmXKt9L5F8r6md5Sr7dec21H6z3Xuc7T3+0P6cZ/1+X1qp04/L+Qe
R6mvm1cf7972vr+jP+/060ySJK9nLb1zkbyf6Z3afs0jrKX//OY+a3f7+cCl
Xv150LN3N3JGR37++OvHu9ZdPm+SJDmvtbU9auvbLf2+V38/yeuZ3qnXzlHp
XZRzW0v/ec33HN395wPPLv35kWf4qdKfZ+p5Sz9OkiR5H1Ol9zWS99uv10rv
opzTpdJ/PvMYa3fdr0mSJEmSxzhK72sk77Nf19J7KK9hLf3nI8915P9/O0mS
JEnyO0fpfY3k9ffrWnoP5TWspf9c5GdcKv24SJIkSZJzuVZ6dyM5/35dS++h
nMO9pf88JEmSJEmS17GW3t9I5vbrraX3Us5hLf3nGUmSJEmSvK9rpXc5kp/b
r9O7KOe2lv7ziyRJkiRJPtel0jsdSfs1P+NS6T+fSJIkSZIkq6P0Tkd+5aul
H3d6v66l91LO5Sj95w9JkiRJkuSaS6V3Oz7b2qeu51d/3yz7dS29k3Iua+k/
f0iSJEmSJPe6VHrH4zOsHXU9b/14tfTz4e8L4Tsulf5zhiRJkiRJ8iiXSu96
vLZrnXX9bt3Jl/r07r33561H6d2UczhK/zlCkiRJkiT5KWvpHZTXdJS6bvd+
/K2/f6139+ul0jsp53SU/nODJEmSJEny0+4tvZdyDmvp6zj99bL3+Rqld1Fe
w1H6+idJkiRJkpzVd0vvrZ/ec5fa+/vSn5fd+nuXqs9bev/ktR2lr3eSJEmS
JMm7OErvrGfttnv33LXW3t5ufQ2XSu+fvLaj9PVNkiRJkiR5F2vpn39+9eel
t/ap53Fkt76W6f2T13aUvo5JkiRJkiTv5uhTe/XSx9/69rNb+/SOnf78r2p6
/+S1raWvZ5IkSZIkybu4lp8Hfs3R2T+nbr8+xvT+yXs4Sl/PJEmSJEmSd7dm
t95n7d3nb2vpz/uqpndPXtta+nomSZIkSZJ8iiO79WvuLf14n2p6/+Q1raWv
Y5IkSZIkyac5slvzzqZ3UF7TUfr6JUmSJEmSfKprpR8feYTpHZTXtJa+jkmS
JEmSJEnez/QOyms7Sl/HJEmSJEmSJO9nev/ktR2lr2OSJEmSJEmS9zO9f/Ka
1tLXMUmSJEmSJMn7md5BeU1H6euXJEmSJEmS5H1N76C8pqP09UuSJEmSJEny
vqZ3UF7TUfr6JUmSJEmSJHlf0zsor2Utff2SJEmSJEmSvK/pPZRzu1T6uiVJ
kiRJkiR5f9P7KOe0lr5OSZIkSZIkST7P9E7KrGulr0+SJEmSJEmSzzW9nzJj
LX0dkiRJkiRJkmQ1vaMy6yh9HZIkSZIkSZJkNb2f8rMulb4OSZIkSZIkSbKa
3lP5GWvp644kSZIkSZIk10zvqvyMo/T1RpIkSZIkSZJbTe+qPMel0tcbSZIk
SZIkSW41vbPyHGvp64wkSZIkSZIk95reWXmuo/R1RpIkSZIkSZJ7Te+rPMda
+jojSZIkSZIkyb2md1Yeay19fZEkSZIkSZLkq6b3Vr7nUunriiRJkiRJkiTf
Nb2/8hhH6euJJEmSJEmSJI8yvbvyGEfp64kkSZIkSZIkjzK9u/I9a+nriSRJ
kiRJkiSPMr2/8j1H6euIJEmSJEmSJI82vb/yPUfp64gkSZIkSZIkjza9v3Kf
S6WvI5IkSZIkSZI82vQey23W0tcNSZIkSZIkSZ5tepfl99bS1wtJkiRJkiRJ
fsr0PsvfXSp9nZAkSZIkSZLkp03vtfzxZenrgiRJkiRJkiTTpndb/vit9PVA
kiRJkiRJkrOY3m2fbi19PZAkSZIkSZLkLKb326c7Sl8HJEmSJEmSJDmb6f32
qdbS1wFJkiRJkiRJzmZ6x32qo/TrT5IkSZIkSZKzmt5xn2Yt/fqTJEmSJEmS
5Kym99ynWEu/7iRJkiRJkiQ5u+ld9+7W0q83SZIkSZIkSV7F9L57V2vp15kk
SZIkSZIkr2Z65727o/TrTJIkSZIkSZJXM73v3t1R+nUmSZIkSZIkyauZ3nfv
7lLp150kSZIkSZIkZze97z7NUfp1J0mSJEmSJMnZTe+5T7GWft1JkiRJkiRJ
cnbTu+7draVfb5IkSZIkSZK8iul9924ulX6dSZIkSZIkSfJqpvfeuzlKv64k
SZIkSZIkeXXTe+/dHKVfV5IkSZIkSZK8uum9926O0q8rSZIkSZIkSV7d9N57
N0fp15UkSZIkSZIkr256772btfTrS5IkSZIkSZJXNb333tW10q87SZIkSZIk
SaYdLf16eud9mmulrxeSJEmSJEmS/LRLpfdc/tjU3td17feRJEmSJEmS5CyO
Wv/d9G7L3x1t3bXr2+/9faP09UmSJEmSJEnyedZa/930Xstt1tI/902SJEmS
JEnyPi619utH1frXpndZzulS6a8jkiRJkiRJksdZawv/vv76p0zvpLyGW0t/
vZEkSZIkSZLc7qj1OU3voryHo/TXG0mSJEmSJMntjlqf0/TuyXs4Sn+9kSRJ
kiRJkly31vqcpndPXtta+uuOJEmSJEmS5LK11uc2vX/ymtbSX3ckSZIkSZIk
/3Sp1q9hegflNR2lv/5IkiRJks92qfTjIsm0tdavaXoH5TVdK/31SZIkSZJ8
hqNW/nmp9OMlybOttX5t0zso72Ut/fVKkiRJkry3o9a/d5R+vCR5trXWr216
7+Q9raW/bkmSJEmS93TU+veO0o+XJD/lqPVrm945eW9r6a9bkiRJkuS9HLX+
vbX04ybJs6y1fm3T+yafYS39dUySJEmSvIej1rdZSz9+kte1Ntvjaf0epndN
Psu10l/nJEmSJMm5Xar1fdbOfnxbSz+/JN//Ov/094ta6/cyvWeSv5b+/kOS
JEmSnMulWj/G2lGP893H8e7jIbn8dXrW13lt7fvY0vtZ86j3cxXTuyX5a+nv
YyRJkiTJuRy1fq5LbX18o7Mfz9bHRXL563Tt7ZZ+36j173319/Fr07sl+Wvp
72ckSZIkybkctf5Z9/bpx5V+XcgreFStM2l6t+SzraW/r5EkSZIksy7VOn9t
7flLv47kJ6wt/fvWeWXT+yWf7Sj9/Y4kSZLkfNbSj4efcdQ6v/Ld0q/vXR2l
H8fTXKt13sH0fslnuVT6+x1JkiTJvGulHx8/46h1HulSr359pq+T9PW59/tW
/We+5lKt886m90w+y1H6+x1JkiTJz7u1tvD26cfPc621zjNdau/X697XN32d
vfs4l2r9d9dKf55XddQ6n2R6z+S9XSr9/Y4kSZLk56y1vs1a+vPguY5aZ8Kl
tr792tf90b36/eeoWn/NtdJfh0d/Pb/6Oq29fq3zSab3Td7TWvr7JkmSJMnP
W2v9NZd693EtPc708/ZUR63zSq716Y/3qcdxtFtLf53u/b5/VK3zyaZ3Tn7W
pY5+f6P0902SJEmSn3Op1o/10y19nunn+26OWidZ3dre79Nr/36W7/t8tuk9
lcf6bq++//R9DkmSJMmctdbv4aulX4+rOmqd5F7TtU6eZ3pv5Tm+29b3n76/
IUmSJJmz1vqzXSv9es1qrXWSJP82vbPyHI/Kfk2SJEk+x7WW3q51fuerpa+H
T193rZMk+afpnZXHure197P2/tP3OSRJkiSPd9TKP9fGr/NYt5a+Tt69vmqt
kyT5p+m9lee41t734+euSZIkyftba50zWktfN69eZ62TJLluemflNayl73dI
kiRJHu+odV7BUfq6cZ2RJM80vYvyWtbS9z0kSZIk37fWOq/gKH39vHq9tU6S
5LrpPZTXtJa+/yFJkiS531rrvJKj9HW09fqqtU6S5LrpHZTXdmvp+yaSJEmS
f1trnVd0LdcXSfIOpvdP3tta+j6dJEmS5J+1zjtZW3rd1/792nWz9Paj+rhI
knzF9L7JZ7hW+v6dJEmSfKKj1nlHj2rpellrvB1Jku+Y3jX5bEfp+3aSJEny
idZaJ/92qfTjIkk+y/R+yWe7VPo+niRJknySo9ZJkiTnMr1fkr9aS9/HkyRJ
kne21jpJkuRcpvdK8ivXSt/nkyRJkndw1DpJkuScpndKco+j9H0+SZIkeQdH
rZMkSc5peo8kt1hL3+eTJEmSV7bWOkmS5Jymd0lyi6P0fT5JkiR5J0etkyRJ
zml6lyS/s5a+vydJkiTv5Kh1kiTJOU3vk+QWR+n7e5IkSfIO1lonSZKc0/Qu
SW5xlL7PJ0mSJO9grXWSJMk5Te+S5HfW0vf5JEmS5J0ctU6SJDmn6X2S3OIo
fX9PkiRJ3sla6yRJknOZ3iXJLdbS9/kkSZLknRy1TpIkOZfpXZLc41Lp+32S
JEnyytZaJ0mSnMP0Hkm+4yh9v0+SJEnewVHrJEmSc5jeH8lXrKXv80mSJMk7
WGudJEkya3qHJPdYS9/fkyRJknd01DpJkmTW9B5J7nGUvp8nSZIk72ytdZIk
yYzpPZLc4yh9P0+SJEk+wVHrJEmSGdN7JLnHUfo+niRJknyCtdZJkiQ/a3qP
JLdYS9/HkyRJkk+y1jpJkuRnTO+S5BZH6ft2kiRJ8smOWidJkvyM6V2S3GIt
fd9OkiRJPtFa6yRJkuea3iXJPY7S9+0kSZLkkx21TpIkea7pPZLc4yh9v06S
JEk+2VrrJEmS55jeI8kt1tL36yRJkiT/rHWSJMljTe+S5BZH6ftzkiRJkn9a
a50kSfIY07skucVR+r6cJEmS5LK11kmSJN8zvUuSW6yl78tJkiRJLltrnSRJ
8jXTuyS5x1r6vpwkSZLksqPWSZIkX3OU3iXJPY7S9+MkSZIkl621TpIkuc+1
ln7utf46+UnXSt+nkyRJkvzbUeskSZL7/G8WXGrt19O7Jp/tKH1/TpIkSfJv
a62TJEluc2m/3mvt3Z+nTe+gvKaj9P05SZIkyT8dtU6SJLnNo/brrTv2u6X3
Uc7tKH1fTpIkSfJPa62TJEl+79H79drfLzI6++e7l0rvqzzXUfq+nCRJkuSy
o9ZJkiS/96z9+lO7+NpuXX9fel/luY623i/X0vfxJEmS5BOstU6SJPm16T36
Uz/fXUvvrDzWpZbuj0dL10f6fp4kSZJ8gqPWSZIkvza9Q8+2e6d3WL7maO11
3nt9pO/nSZIkyTtba50kSfJ303vyLK6V3mf5vaOzr4d6n52+3ydJkiTvYK11
kiTJ/9/0bjy7a6V326e5Vuo6qKXv/0mSJMkrWmudJEk+3fQ+fFXX2rq31rd/
qntLv/5r10X6vp8kSZK8sqPWSZLk003vfXdzqa1vn96R0/t1+vU7+vVP3/eT
JEmSV7TWOkmSfKrpvY8/viy9J9uv33OUvu8nSZIkr2ytdZIk+TTTOx9/d5Te
k9N/f0j6dTj6v0dsLX0+IEmSJGe01vr3LrX2+0iS5Hymdz7+7lLpfdnPYZ9r
LX0+IEmSJGd0b/X3tU6SJK9merfj947Su7Kfv/6MtfT5gCRJkryDo9ZJkuTV
TO91/N6l0nvzu/v0UunnexZH6ft8kiRJ8g7WWidJklcxvdNxn7X0Lm2fPsda
+n6fJEmSvIO11kmS5Oymdzq+Zm2W/Tr9vNzNpdL3/SRJkuSVHbVOkiRnN73P
8T1rfr763tbS9/0kSZLkFV2qdZIkOZvpPY7HWDtrr05/nvzxW+n7fpIkSfIO
1lonSZKzmN7heKxr7d2t058Pv3aUvs8nSZIk7+RSrZMkyZTpHY6fcW/px8vv
rb16X54+H5AkSZIzW2udJEl+2vQOR/K4Hfvd0ucDkiRJckZrrZMkyU+Z3t9I
5q2lzwckSZLkjC7VOkmSPMv0bkZyHmvp8wFJkiQ5s6PWSZLkWab3MpLzOUqf
B0iSJMmZXap1kiR5lOmdjOR8jtLnAZIkSfJKjlonSZJHmd7JSM7naOl+PH0u
IEmSJGd01DpJkjzK9E5Gcj5H9T58qfQ5gSRJkpzBWuskSfJd0zsZyflcau3t
0ucFkiRJcgZHrZMkyXdN72Qkr+8ofU4gSZIkZ3DUOkmSfNf07kXy+tbS5wWS
JEkyYa11kiT5rundi+R9XCt9niBJkiTPdNQ6SZI8yvTeRfL+1tLnCpIkSfIM
R62TJMmjTO9aJJ9jLX2+IEmSJI901DpJkjzK9J5F8nnW0ucMkiRJ8ghHrZMk
yaNM71gkn2stfd4gSZIk33HUOkmSPMr0fkWSo/R5gyRJknzHUeskSfIo07sV
SdbS5w6SJElyj7XWSZLkUaZ3K5IcjtLnD5IkSXKPo9ZJkuTRpvcqkhyO0ucP
kiRJco+11kmS5FGm9yqSrKXPHyRJkuQr1lonSZLvmt6tSHKUPm+QJEmSR/hq
rZMkyWp6tyLJUfqcQZIkSSastU6SJIfp3Yrk/d1a+txAkiRJJq21TpIk07sW
yfu51Np9evq8QJIkSc7gqHWSJJneuUjex1r6vp8kSZK8oqPWSZJkeu8ieR9H
6ft9kiRJ8sqOWidJkum9i+T1raXv90mSJMkrWmudJEmmdy+S13eUvt8nSZIk
7+CodZIkmd69SF7fUfo+nyRJkryDtdZJknyu6d2L5PUdpe/zSZIkyTs5ap0k
yeea3r1IXt9a+j6fJEmSvIO11kmSfJ7p3YvkfRyl7/NJkiTJO7m11kmSvJ/p
vYt8gu+Wfvx7P8/0/T1JkiT5JGutkyR5H9N7F3kl3+2/7ftcKv082K9JkiTJ
+Ry1TpLkfUzvXeQVrO3doY+yln4+7NckSZLkPNZaJ0ny+qZ3QXIm10rt1lt/
Lrv26eenlr5/J0mSJJ/oqHWSJK9vei8kZ7CW3qc/tW+/2taPn75vJ0mSJJ9o
rXWSJK9rejckk9bSu/NdrKXv30mSJMknOmqdJMnrmt4PyaSj9N57V2vp+3eS
JEnySY5aJ0nyuqb3Q/JMt5beee9uLX0fT5IkST7BUeskSV7X9L7IH7+Vfhx3
e5yj9H77dGvp+3iSJEnyCY5aJ0nyuqZ3xrv46Wb9vN79fUc/zvRuyx+/lb5/
J0mSJJ9krXWSJK9neve9urVP/xzr6KjP49XPa6lXf199PFsff3qn5e/W0vfv
JEmS5BMdtU6S5PVM779XdzTLPlh79+erZ/m8/Lz1tayl79dJkiTJJ1trnSTJ
65jef69qLb0X7t21a+nH++rnkX58/PFt6ft0kiRJkn87ap0kyeuY3oGvZi29
G5IzOErfj5MkSZJcdtQ6SZLXMb0HX81Rei8kZ7CWvh8nSZIkueyodZIkr2N6
D76KtfRuSM7gKH0fTpIkSXLdWuskSc5vehe+iqP0XkjO5Ch9H06SJElyu6PW
SZKc3/QuPLu19F5IzmQtfR9OkiRJct1R6yRJzm96H57VWnonJGd2qfR9OUmS
JMk/HbVOkuT8pnfiWVwqvQuSV3SUvi8nSZIk+aej1kmSnN/0bpy2lt79yDu4
VPo+nSRJkuTftU6S5Pym9+O0o/TeR97ZUfo+nSRJkuTftU6S5Pym9+PU3wtS
S+975J2tpe/XSZIkySc7ap0kyflN78uf2qnT+x3Jv0vfr5MkSZJPtNY6SZLz
m96d/T0g5HOspe/fSZIkySc5ap0kyeuY3p3t1+TzrKXv40mSJMk7W2udJMnr
mN6d7dfkc62l7+tJkiTJO1lrnSTJ65nenc/6+6/TuxzJ/Tt2+v6eJEmSvJOj
1kmSvK619A7t57DJ5zl69748fT4gSZIkZ7LWOkmS17PuR7X0Hu3nr8n7W3v1
fvzV90OSJEne2aVaJ0lyfrfuSbX0Xm23Ju/nqy29n/Q5gSRJkpzRWuskSc7r
WfvS2Tt1Lb27kZzHWvp8QJIkSc5orXWSJOfz7N1o5O+3Jvlp95Y+P5AkSZIJ
12qdJMmcs+xH/p4Qkilr6fMDSZIkOYOj1kmSzDnbbjTyc9ckP20tfV4gSZIk
k26tdZIkzzO9F63tR/Zrkp+2lj43kCRJkjM6ap0kyfNM70Rb96NR+nGRvL+j
9HmAJEmSnNlR6yRJnmd6JyLJ2RylzwMkSZLkzI5aJ0nyPNM7EUnOYi19HiBJ
kiRnttY6SZLHu1Z6TyLJTzlKnwNIkiTJKzlqnSTJ4/3vFtxaem8iyXetpe//
SZIkyStZa50kyeNc2q/XXCu9R5HkVkfp+36SJEnyyo5aJ0nyOF/dr/fu2ul9
iiSrtfT9PkmSJHlla62TJPm+R+/X9mySV3GUvs8nSZIk72StdZIkX/fs/Xpt
z07vVySf6yh9f0+SJEne0VHrJEm+7qf3az+XTXIWR+n7epIkSfKOjlonSfJ1
U/u1/z1IkmlH6ft6kiRJ8k7WWidJ8nXTu7W/b4RHOEo/Dl7LWvo+nyRJkryy
tdZJknzf9D7t7xvhK77a2vvb+vHSnz+PtZa+7ydJkiSv7Kh1kiTfN71L+7ls
fudaR/39NEdnB7+mtfR9P0mSJHlFR62TJPm+6R3ajs1fXSp9nZ29k6efd/5u
LX3/T5IkSV7JWuskSb5ueu87ejdM7158z1H6eprlv7+s/frR/53g6I9zdWvp
cwBJkiR5JWutkyS53/R+5+ewn+la6espff2+2t7n/azHUfv09WPHJkmSJOex
1jpJkttN73apn8NeK73v3tVa+nq5i3ub7XFt/bqsffq/Y9XS5wCSJEnySo5a
J0lyu+nd7dP7de3T+9dTXCt9nXAOlzr7+8DR13P6HECSJEnObK11kiS3m96v
zt7DlnaoT+9fT7GWvh74TGtHXdf/Q//dWvpcQJIkSc5orXWSJLeb3pk+tV/V
Pr1/Pc1R+jrgs93b3v3ajv3jt9KPgyRJknM7ap0kye2m96XZHaX34KtZS7+O
5HfW9u7Xs+3Yn3oce0ufl0iSJJmx1jpJkttN70azW0vvwldzlH4dyS2utbZf
L+3Yo0+dBz7drLt+6uOSJEnyd0etkyS53/RedBXXSu/Es1lLv37kK4627tZr
++3Z54F3H+fZ1j51TloqfY4jSZJ8iqPWSZLcb3ofurqj2fbiWR5H+vUhX7E2
63599OO8+o691Kf/ewJJkiR/d9Q6SZL7Te9EV7eW3otneTzp14U8wtHZe+3W
X1/69+k9+qjnpbb2/Cz17setH4ckSZLvOWqdJMn9pvehu7hUai9ea+8evvft
068HeYSjT+21r5beoT+9a9fO+vjpcx5JkuTVrbVOkuR+0/vQXV0q/fPOW3v1
7ck7OUrvufyso7PPb2d9HJIkyVmstU6S5H7T+9BTHPl7psl5XSq9p/Kz1o46
r43WPs5RH58kSXIWa62TJLnd9F70FGv+nmlynq/HWno/5RyO3j2f7d3La+nz
JkmS5FHWWidJct30jvQ0R37umvz8110tvY9ybmt7z2Of/vgkSZJXsdY6SZLL
pnelpzmyW5Of/7pL76G8pns76+Onz5kkSZJHO2qdJMll07vS03y39OMnr2Qt
vYOSr1hLnzNJkiSPstY6SZJ/mt6XSHKvo/rPS6X3R/IIa+nzJkmS5FHWWidJ
8m/TOxRJ7nWp9L5IfsKl0udOkiTJdx21TpLk36Z3KJJ81VF6TyST1tLnTpIk
yVcdtU6S5N+m9yeSfNVRej8kZ3CUPneSJEm+aq11kiTz+xNJvuoovRuSM1hL
nz9JkiRfddQ6SZL5/YkkX7WW3g/JGRylz50kSZKvWmudJPlk0/sTSb7rKL0b
kjO4Vvo8SpIkudVR6yTJJ5venUjyXWvv7ntH7YR73x95pmulz6ckSZLDWusk
ySeb3p1I8ij39u7vX3o/a+8vvWOSv7pU+txKkiSf66h1kiTzexNJHu0o/TiW
Hld6ryS/s5Y+v5Ikyee5VOskySea3nNI8inW0jsl+Z219DmWJEk+11HrPNOl
0o+LJNN7Dkk+zVp6pyS/8922nke3vj1JknyOtdZ5hjXPP8nZTO84JPlUa+/u
h+mdk/zVo0qfm0mS5OddqvV9HvV+Pu27vfr+116PtfdLkmeZ3m9I8ulube33
p/dK8khr6XM0SZLM+W5L76f1c11r7fetPR/vPk+vPv+tk+RnTe82JMn3XCq9
P5JHOEqfm0mS5H3cWuvvOXr146efp7XH3TpJfsb07kKSPNZRenckj7CWPreR
JMn7W2v9NUfpz2fW54ckt5reWUiSx1pL74/kO9bS5zWSJPkc12r9a2vpz+NT
z0/rJHmO6Z2FJHmOo/T+SL7jKH0+I0mSHI5a/9pR+nF++vmotU6Sx5jeV0iS
51hL75DkK47S5zKSJMnh1tKPc5bnp3WSfM/0vkKSPNdaeo8k9zhKn8NIkiSX
rKUfzyyOWifJ90zvKiTJzzhK75HkHkfp8xdJkiT3WWudJF8zvaeQJD9jLb1L
klscpc9fJEmSfM1a6yS5z/SeQpL8rKP0LklusZY+f5EkSfI1a23h3y+9Hcnn
mt5RSJKftZbeJ8ktjtLnLpIkSb7nUmtv1zrJp5reUUiSGUfpXZLcYi197iJJ
kuRnrLVO8mmm9xOSZMZaep8ktzhKn6NIkiT5WUetk3ya6f2EJJl1lN4lyS2O
0ucnkiRJftZa6ySfYno3IUlmraX3SfIra+nzE0mSJDOOWif5FNO7CUlyDkfp
nZL3cCm7NUmSJF9xrdZJ3tX0XkKSnMNRevfkPRwtnTf27t7p8xJJkiTntNY6
ybuZ3ktIknNYS++fvLajtfPFUulzEEmSJK/lUq2TvLrpvYQkOZej9P7Ja7jW
1nNG+rxDkiTJezlqneTVTe8kJMm5HKV3Uc5tLX0+IUmSJH+11jrJq5reSUiS
czlK76Oc01r6XEKSJEl+56h1klc1vZOQJOdylN5JOaej9DmEJEmS3GKtdZJX
M72TkCTncpTeSTmXtfQ5hCRJktzjqHWSVzO9k5Ak57CW3ks5h7X0uYMkSZJ8
xVHrJK9mei8hSc7hKL2Xcg5r6fMGSZIk+Yq11klezfReQpL8jLWlf5/eTTmH
o/R5gyRJkjzCUeskr2Z6TyFJnuvW0nsp53KUPmeQJEmS71hrneTVTO8qJMlj
XSq9h/JajtLnDZIkSfIVa62TvKrpnYUkeYy19P7JaztKnztIkiTJVxy1TvLq
pvcWkuQx1tL7J69tLX3+IEmSJPc4ap3k1U3vLSTJY62ld1Be21r6HEKSJElu
cdQ6yaub3llIkuc4Su+fvIe1pfNB+pxCkiRJ/lrrJK9uel8hSZ5jLb1/8h4u
lT6fkCRJkr86ap3k1U3vKyTJcx2ld0/e01H6fEKSJEn+6qh1klc3vauQJM91
lN45eU9H6fMJSZIk+auj1kle3bXSuwtJ8j1H6Z2T93SUPp+QJEmSvzpqneTV
XTuPjtL7C0lym0uld07e01r6nEKSJEn+Wuskr+7ec+kovc+Q5NNdK71r8lnW
0ucVkiRJPtta6ySv6rvn01F6xyHJu7tUerckf7WWPreQJEny2dZaJ3k1jz6n
pvcdkry7o/ROSX5nLX1uIUmS5LOttU7yKp51Tk3vOyR5N2vpfZL8zlH6nEKS
JEn+6qh1klfx7J+3Su89JHkXa+l9ktxS+nxCkiRJflXrJK/ip86z6d2HJO/i
KL1b8pkulT6PkCRJkl9Za53k1fzUOTe995Dk1a2ld0w+01H6HEKSJElucdQ6
yav66Z/TSu8/JHlVR+n9ks+2lj6PkCRJkt85ap3kVf30eTe9/5Dk7K6V3i/J
r0qfS0iSJMmvrLVO8mrar0lyDmvpfZLcYi19PiFJkiS/stY6yatovybJuRyl
d0lyj7X0+YQkSZL8ylHrJK9i6lyb3odIclZH6T2SfMVR+lxCkiRJfuVSrZOc
1dS5Nr0PkeSsjtI7JPmKtfT5hCRJkvzOUeskZzV9rk3vRCQ5m6P0Dkm+Yi19
HiFJkiS/c9Q6yVlNn2/TOxFJzmItvUOSe6ylzyEkSZLkFketk5zVWc656d2I
z7CWfjzkV6V3SPIVR+nzB0mSJLnHUeskZ3WW8+4ovSPxnm4t/Tjvai39eM66
fkavvt/092PyHUfp8wdJkiS5x1rrJGczfd5d2rFH6d2KWWvv7ov+O8o+13r1
dUh/Xmfty6+W/v5LHuEoff4gSZIkX3HUOsnZTJ937dn8zr2ddd2tlX6ezn6+
9z5PV//vBLX090PyCo7S5w6SJElyj7XWSc5m+rz76q6Y3rf4GWvp63Dtuhyl
n7ejnvezn7f053m1642c0Vr6/EGSJEnusdY6ydlMn3vfPSeP0rsXz3WUvv72
Xp9H7ajvvr+9H2c0+/P01OuMnMlR+txBkiRJ7nGt1knOYvrce9cdjMdaS193
e6/L2t4d9dXfv7VZnqdZrrP09UNeyVH6/EGSJEl+56j+83/ff3fUOslZTJ97
jz4/p/cvnusofb29e53Wtu70S7/vqjv/1s/L9UXO6yh9HiFJkiRfaWm/HrV+
T0fpx0FuMX3uPWv/GqX3Vh7rKH29nX3dbv19V9+ttz4fI9cXOZ+19HmFJEmS
z7RWd+m9rtX6PVwr/fjIf5Q+937qPJ3eXXmMo/T19anrd+v1vfb2V3cp1xc5
j6P0uYUkSZLPsvbubr131279Xi619Haffnx8punz7qfO06P0/sr3HKWvK2at
LV0nr5b+/MgrWkufY0iSJHlta2tvd/Zu/bQdu7q1Tz8uPsP0eTd1rk7vsPze
tdLXE+dwrfTjI5/oKH3eIUmS5LVdaunXP71fP23HHj39eWDG9Dk3da6upfda
fm0tff2QJL+3lj73kCRJ8pqO1v4+6tRu/ZT9tna1vzd87eMvdfbj4j7T59y0
tfRey6+tpa8bkuT3LpU+B5EkSXJua+ld+tUdu/VruLWz/vcw1x7fq+7t7v8d
4uqmz7ezWEvvtfzaWvq6IUluc62t55j0eYokSZLnWkvv0Xfdr2t3+Xn12lX2
dn5v+jw7m7X0XsuvraWvG5Lka+4tfZ4iSZLkZxyl9+i779ezPF+jtce95ujs
xzl69XFyn+lz66zW0nvtq/tu+nF86vNMXy8kyXMcpc9PJEmS/Iy19L6a3mPf
da3087W2D49a/97a7I+X+0yfS2d3qfRuu/bzyLM/Xj+HTZLc4ih9jiJJkuRn
HKX31Lv8vO4o/XyctRPXZnu8rfMI0+fSq1mbfb+d7fH6OWyS5B5r6fMUSZIk
z3WU3iFTO2zrx1pLPw9PsdY63zF9Lr2qo6vstkulH7/9miS5xVH6PEWSJMlz
HaX3x/TeWWv9a9d+vb5d+vN8mrXW+Yrp8+hVrc32c9ezP/7Zng+S5NzW0ucq
kiRJnuMovTvO4tGlP5+nulbr/M70efTq1q6209bSO7SfwyZJfmft1fNQ+lxG
kiTJrx2l90byE67VOv9R+hx6F9d6d6eunf340zv0u89T+nogSZ5rbes5aGvp
cxtJkuRTHaV3RTJprfVnmz5/3t21Zvt7MNYe3yzW0q8zSTLj3ra+v/S5jSRJ
8qmO0vshOYO11p9p+tz5VNea7fGl92p/XwhJ8hOO0uc2kiTJpzpK74bkTNZa
f5bpcyLntnb2Du3vCyFJJq2lz28kSZJPc5TeC8kZXav1e5o+J/Ia1j7191gv
fbxR+nkhSd7T0dJ5Kn2uI0mSvKuj9E5IXsla6/cyfT7ktVzr6P/dxbXSzwdJ
8p5uLX2+I0mSvLpLpfdA8oqOWr+X6fMh7+GrpR83SZKvuFT6/EeSJI8r/Xnc
1aXSux95B2ut38P0+Y8kSfLq1tLnQpIk7+je/k1/zVr6876ro/TeR97RWuvX
Nn3eI0mSvItrpc+JJEleyaVe3aXt2HM5Su985J2ttX5N0+c8kiTJu1tLnxdJ
kpzZ2qf2ajv2Zx2l9z3yCdZav5bp8xxJkuRTHKXPiyRJzmgtvVvbsc91lN71
yCc5av1aps9xJEmSd7eWPi+SJDmDS6V3ajv2udbSex75JGutX8P0eY4kSfLu
jtLnRZIkZ3KU3qPt2J+xlt7xyCc7av0aps9zJEmSd7WWPjeSJDmDtfQOffSO
PUo/z7NYS+92JP+s9blNn+tIkiTv6ih9biRJcgZr6d3Zz2Wfay2915Fc3rFb
n9v0uY4kSfKuLpU+T5IkmXCU3pft2Oe4VHqfI7m+X49an9P0uY4kSfIpjtLn
S5IkP2ktvSun/16R0dbna29Hv5+9jzO9x5F8fcdufU7T5ziSJMmnOErvCCRJ
nuFa6T05tV+v/bzjUu/+HOXR7+eo909yPmutz2X6HEeSJPkUR+l9gSTJMxyl
d+NZHKV3KZLc6lKtZ02f40iSJJ/iKL0vkCR5hqP0bjyLtfQuRZJ7rbWeMX2O
I0mSfIq19M5AkuQR1tK78Wwuld6lSHKra7V+rulzHEmS5NMcpfcGkiR/tbb2
67X0TnwVl0rvUyS517VaP8b0+Y0kSfJpjtI7BUny3p5Vev+9m1tL71QkudVa
6++ZPr+RJEk+zVp63yBJ3staep/le24tvVeRZHWp1veZPr+RJEk+1bXS+wdJ
8lrW0rsrP+Na6f2KJIdLtf696XMbSZIkf7eW3kNIktewlt5VmXWp9H5FksOl
Wv/d9PmMJEmSX1tL7yIkyWs4Su+nnMutpfcsks911Prvps9lJEmS/N5aehch
Sc5pLb2X8lqO0vsVyedaaz//ffo8RpIkyW1u7exdJL3PkCS/dpTeQXlNa+kd
i+RzHbWf/5w+h5EkSfIYa6/uHltL7zQkyR9flt5BeW2XSu9ZJJ9jLX3OIkmS
5LHW9u4eW99/eq8hSf7uKL1/8l6O0nsWyeeaPl+RJEnyHJda2jv2vt/0TkOS
/N1aevfkPVwrvWuRvL/pcxVJkiQ/41rvvp/0bkOS/PFb6d2T93at9N5F8j6m
z1EkSZK8trX0bkOST3eU3jf5TJdK718kr2v6vEOS5P/b3r0suW1kURT1J7lf
c///V/Wg40ZbV0rhQYAHmVhnsqIkFchiTZLbCJrkGval+w1JvtVaumOSv9rV
Xeuu65J8jun3OSRJklzLWrrfkOTb7Et3S/Lvnt1Wt97770nOa/r9DUmSJNey
L91zSPIt9qV7JfmJfaN+3f99urOt5mjp58V3mX5/Q5IkyTXtS3cdknyLtXR/
JK9wa3t7N/c5mteZSdPva0iSJLm2femuQ5Kr2pfujmTCraU73CzWjr7O6efN
NU2/nyFJkuTa9qX7DkmuZl+6H5JPtJbucLNYu+q/G4z26fP79Dqcw/T7GZIk
Sa5tLd13SHI1R0t3QvKJjpbuck+19u3fx6dLv268x/T7GZIkSa5tLd15SHJ1
+9K9kHyyfek+t7cn3339vvTv6dMenv698RrT72dIkiS5tnuX7j4kuYq1dE8i
Z3C0dK8bdeW7Hyf9+/jW77V/zWebfj9DkiTJd9u31WO2/h1Jvt1auh+RM9qX
7naj3XXd9Ov/rd/raOnfN39t+v0KSZIkecVG/Wb09yS5qrV0LyJn9uh6F/60
I/f156VXX+to6W7L/5l+n0KSJEl+4t6lexJJfstaugeRb/CqnX28o/06/XrN
4mhX3Se/d+lu/BTT7zdIkiTJO+1LdyWSvNu+dAcieV9f1a+/496d/fdbj5fu
x2nT7ydIkiTJb1hLdyWS/JZ96f5D8r6euvc+3/Tz5jFHS/dk/ZokSZK83q2l
OxNJ3mVfuseQvK9vuu96bbeW7sz6NUmSJHm9fenORJJ32ZfuMCS/1zXTz4/3
Wkt3Zv2aJEmSvM++dGciybuspXsLSfIa+9K9Wb8mSZIk77Mv3ZlI8ir70r2F
JHmtfenurF+TJEmS9zna0U6U7lUk32utf53uKyTJe927dJfWr0mSJMnrrPUO
tHfpjkVyXY8u3VVIkln70n1avyZJkiQ/d7S935fuWyTXsy/dQ0iSc7m1dLfW
r0mSJMn77Uv3LpLrWUt3EJLkGm5NvyZJkiTXsS/duUiuZy3dO0iSazva1b26
Xzd9nidJkiRXtpbuWyTnd2vprkGSfJdb+7Rf19LneZIkSXJla+nuRXJ+a+le
QZLk77xqdb30eZ4kSZJc2Vq6e5Gcx1r/upbuEiRJftP0eZ4kSZJc2b5RnyLJ
bl+6H5AkmTB9nidJkiTf4NbSnYxk3tHS3YAkyaTpczxJkiT5ZreW7mkkv9+v
052AJMknmT6vkyRJkvzZ0dJ9jeR93bqW7gQkST7J9LmcJEmS5LZ96d5GUrcm
SfIbps/hJEmSJPdbS3c3ktd37HQfIEnyiabP3yRJkiT3W0v3NpLXdetaug+Q
JPlE0+dvkiRJkvvtS/c3kp/363QXIEnyyabP3yRJkiSPW0v3N5LHe3VfuguQ
JPlk0+dukiRJksftS3c5kvu7dboDkCT5ZGv1dfrcTZIkSfK8tXSfI6lbkyR5
xL1Ln7dJkiRJnrcv3etI/tyv032AJMknONqff/3e9HmbJEmS5OfW0r2OpH5N
kuTvttWr9WuSJElyPfvS3Y7kz0t3BJIk93j1jvZq/ZokSZJcz750tyP5c8dO
9wiSJH/laJ9256tMn7NJkiRJHne0dKcjOe7XtXSnIEmu6adLd2r9miRJkpzX
0dJdjuTxjp3uGyTJNa2le7N+TZIkSb7PWrq/kTzfrWvpvkGSXMu+dG/Wr0mS
JMn3WUt3OJLHe3Ut3TdIkms4Wroz69ckSZLke62luxzJ/d063TdIkmvZl+7K
+jVJkiTJvnSfI6lfkyS/a1+6J+vXJEmSJMtausuRPN6x072DJDm3femOrF+T
JEmS7PaluxzJnzv1aOnuQZKc0750P06bPo+TJEmS3LYv3e1I/n/pzkGSXMta
uhs/xfQ5nCRJkuR++9L9jnyztXTnIEmuYV+6Gz/F9PmbJEmS5HH70h2PfKO1
dO8gSc5tX7oXP830uZskSZLkefvSPY98k7V09yBJzmlfuhM/1fR5myRJkuTn
1tI9j3yDo6U7CElyLmvpPvx00+dskiRJkp/bl+575JuspTsISXIO+9J9+Omm
z9kkSZIkr7Mv3fXIN9iX7iIkyWdbS3fhWUyfr0mSJEleb1+675FvsJbuIiTJ
Z9qX7sKzmD5XkyRJkrzPvqMdLt0DyZnsS3cSkmTW0dI9eDbT52mSJEmS93t2
6R5Izmgt3U1Icq97l36es9iX7r+zmz5HkyRJknyetXQHJGe0L91RSHJk36gf
9qWf99Gf62mvJ4+ZPheTJEmSfJ61dAe8uyvW0s+LazpauuuQZN/ejnh06Z/r
W8+nL917VzN9LiZJkiT5PGvp/re3Dx7tiP3nHE335pXW0t2K5Hus9a9rd/XG
ozv7c402ej53vb6jx+U1ps/FJEmSJJ9n37d789n7Wrf+/uzP379/9Ljk76yl
exbJ9a31r2vpHjnq3Fs/T9/Vj3P09T36PHjO9LmYJEmS5HOtXd2Z91539O9q
/Xn2Pf314TvsS3ctku+xL90h9/bl0b71ON96Ptxn+jxMkiRJ8rn2ne11W9ft
19+7p7w+6T7KZ1tLdyyS77Ev3R/JT0yf90iSJEk+376z3Xrv9Y9+f/p1SfdR
PsvR0j2L5HuspbsjeYXp8x5JkiTJedy79PP89uuR7qV8lrV0vyL5PvvS3ZG8
wvR5jyRJkiRntZbupcy4tXTHIvk+a+neSF5p+rxHkiRJkrNaS3dUZq2luxVJ
1tK9kbzS9HmPJEmSJGe1b3Rfbrqv8l5r6W5F8j1uLd0byStNn/dIkiRJchav
Xrq78hpr6Z5Fcn370l2R/Ibp8x9JkiRJzmbtn3+ds5burjznaOmuRXJ9a+me
SH7T9LmPJEmSJGex79N+XUv3WJ6zlu5ZJNdza+meSH7T9PmPJEmSJJ9irX/d
d7Zb69hrWUt3LpLrWUt3Q/IJps+HJEmSJJly767q1Tr2GvalOxfJ51i76jrp
bkg+wfR5kSRJkiS/bd/dfVq/XsO+dCcj+RyPbu910t2QfILpcyNJkiRJ3u1o
uvVabu3T76+lOxnJ51nb6nB7l+6F5JNMnyNJkiRJ8m5r6V496tfp7ju7faOu
VNvq1ekORnI+a+nOR65o+hxJkiRJknfZl+7V7ru+1r69feno95HklrV05yNX
NH2eJEmSJMlPrfWva+le/fb7rvu+3a1J8i770p2PXNH0OZMkSZIkj7p36U79
9n492qff35fuV+SK1o722/Tz/vbrU0v3PXJl0+dOkiRJktxytHSHftvnh4y2
9ff/aX9/9PHq+7t96Z5FrujZpZ/3t16PdNcj32D6HEqSJEmSW9bS3fltHXu0
UT/ufz/qzWcfb+u66a5FruRoW51ptPTP8+nP3ZfueeSbTJ9DSZIkSXLLvnR3
vrtj19L9eu990Hvdu0+vm+5f5Mz2/WPw53u7U9/TOvRo6V5HUr8mSZIkOZ+1
dG9+y+dj933ar++2L90ByRmtVbfu9p3t2LW7e3W6u5HUr0mSJEm+x750Z57l
c0W2Nnu31rHJ7/XrTzv20Z59dOnORvJ60+dPkiRJkjxqLd2ZZ+nYZ5fu0Fd1
7HQPJGeyttWvr+rY5dbS/YxkzvS5kyRJkiT32pfuy7N8PnatXy/dl/VrvtnR
nvJ89vbrUceupbsXyflNnz9JkiRJcq+1dE9Oe3aj7093Zv2aK7p3W/332zva
rY/27L50FyP5fNPnT5IkSZLca1+6I89uLd2Z9WvObG3Ura/qwavZ9+fgz0dL
9zSS+jVJkiRJjqyl++/s9qV7s37NK+z71uP0pfvwLI529+dtk5zH9LmTJEmS
JI9aS/ffVayle7N+zTMe3dWPl+6/b7WW7mok9WuSJEmS7Pal++/s1tK9+a5+
Xfu0V6Y7LX+076rPY977uOl++3b70n2NpH5NkiRJkt1auv/Oal+6Nz/tPuzR
0t2Wf/ywu3qo+67nsC/d2Ujq1yRJkiRZ9qV78GzW0n35Kfdhjza6ztb1eK+1
u3toX7rX8tfW0p2NpH5NkiRJkt1augc/3dHSfTnVsUfz+dpzWEt3Uz7DWrqz
kdSvSZIkSbJbS/fhp1tLd+RVrKU77rd78VOeRy3dTfkMa+nORlK/JkmSJMlu
Ld2Hn24t3X1XsZbuud/qxLWnPI90L+WzrKU7G0n9miRJkiTLvnQffqp96e47
u6Ole/Nd3fjf7eua+6z5JGvpzkZSvyZJkiT5Hvcu3Yefbi3dfVexlu7Ld9/f
XKt+3Tv2t55XuotyDvvSvY2kfk2SJElyPUdL99/ZraW77yrW0t35rvust6x9
q5+nuyjnspbubST1a5IkSZLzO1q6965iX7r7rmIt3Z3v6sd7+3WtX+dsr053
T65hX7q7kdSvSZIkSc5nX7rzrmot3XtXs3a2E6d79dX3YZ9dunNybWvp7kZS
vyZJkiQ5r7V0513VWrr3rmZtb6ceLd2rz95/vdWz092S/PvS3Y2kfk2SJEly
HkdLd97V7Ev33tU8u6d9/kjf2W6tX/OJjpbucCT1a5IkSZLPtZbuu6val+68
/NHRZu/W+jVncLR0lyOpX5MkSZL8nrXRn9fSnXc2jy7dafmjW3v651yf/Tzs
dK8kf+do6U5HUr8mSZIkeb17l+7As1tL91ju8+i+db917ep+rWNzZvvSvY6k
fk2SJEnyc/vSfXd1a+kuy997drPdb61jc0Vr6V5HUr8mSZIk+bm1dNd9i33p
Tstfe3ar9WsdmzPal+52JPPnXZIkSZLzWvtWr7378Waxlu60/NGt7f2+Wf5/
jTo2V7Yv3e/IN5s+75IkSZKc1769/fno+uOl+3HaWrrX8o9f7tPrrHofto7N
Ge1LdzzyjabPuyRJkiTnd2t3PU66I+vX73S0u6671aNnuf96q2PXtvrh3u8j
r/To0r2PXMn0OZckSZLketbuvn4t3ZO/3a1r6Y77Nke7+/H2dumn33d9tmfX
Pu3g5DfsS3c/cgXT51qSJEmSPGst3ZXdf/0Oa/9qX3+rl4+69d6l+/S3O3i6
Y/Ld9qX7Hzmz6fMmSZIkSZ61lu7J+vU7HC31uOlO/FT70h2T73a0dA8kZzJ9
3iRJkiTJs9bSPdnnh/BO+9J9eBZr6X5J/t3R0n2QfLLp8yZJkiRJnrWW7so6
Nu+0lu7Bs1lL90ryd9bSfZB8sunzJkmSJEketS/dk9MdO91Xea+1dA+ezVq6
T5K/sy/dCcknmj53kiRJkuSWo6X7cdq+dGflPdbSPXg2a+k+Se6xlu6E5BNN
n0NJkiRJcstauhc/1Vq6s/Ie+9JdeBZr6S5J7rGW7oTks/wvlsTN+A==
          "], {{0, 637}, {728, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{728, 637},
        PlotRange->{{0, 728}, {0, 637}}], ",", "\"\<Bit\>\""}], "]"}]}], 
    "]"}], ",", "connections", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"600", ",", "600"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740065062006382*^9, 3.7400650623414536`*^9}, {
   3.740065975386037*^9, 3.740066005207392*^9}, {3.740067586381899*^9, 
   3.7400676061291037`*^9}, {3.740067637387602*^9, 3.7400676470129204`*^9}, {
   3.7400676884352026`*^9, 3.7400677009916563`*^9}, {3.740067921768796*^9, 
   3.740067927735895*^9}, {3.7400681795002165`*^9, 3.740068181355249*^9}, {
   3.7400689349663754`*^9, 3.7400690701705847`*^9}, {3.7400691296564255`*^9, 
   3.740069170759063*^9}, {3.740069261775197*^9, 3.7400693020119605`*^9}, {
   3.740069397013095*^9, 3.740069400231123*^9}, {3.740069595339685*^9, 
   3.740069595558137*^9}, {3.740070162561803*^9, 3.7400703305007677`*^9}, {
   3.740070373401561*^9, 3.7400703747806115`*^9}, {3.740070875285462*^9, 
   3.740070878465577*^9}, {3.7400712824478884`*^9, 3.7400712853843393`*^9}, {
   3.7400717031296625`*^9, 3.740071706995203*^9}, {3.7400718922258935`*^9, 
   3.740071895053464*^9}, {3.7400720493880167`*^9, 3.740072077835178*^9}, {
   3.7400721080443525`*^9, 3.740072110091261*^9}, {3.74007255176511*^9, 
   3.7400726259301105`*^9}, {3.7400729526784353`*^9, 3.74007295594266*^9}, {
   3.740073156512859*^9, 3.7400731727951784`*^9}, {3.7400732909891963`*^9, 
   3.7400733223944817`*^9}, {3.740073385680723*^9, 3.740073391304421*^9}, {
   3.7400735493385043`*^9, 3.740073573508604*^9}, {3.740073867865666*^9, 
   3.740073869991666*^9}, {3.7400742506871047`*^9, 3.740074279935716*^9}, {
   3.7400799294428244`*^9, 3.7400799305046997`*^9}, {3.7400864606026306`*^9, 
   3.7400864615868273`*^9}, {3.7400872432150383`*^9, 
   3.7400872451052313`*^9}, {3.740087328882702*^9, 3.74008735423612*^9}, {
   3.7400880863674784`*^9, 3.7400880961308365`*^9}, {3.740088202917306*^9, 
   3.7400882062758865`*^9}, {3.7400908363198433`*^9, 
   3.7400908404282246`*^9}, {3.7401489387917385`*^9, 3.7401489432424107`*^9}, 
   3.740180565539897*^9, {3.740221194132101*^9, 3.740221220537249*^9}, 
   3.740221494811823*^9, {3.7402217670907125`*^9, 3.7402217773472104`*^9}, {
   3.740221838487853*^9, 3.7402218420072436`*^9}, {3.740222022980564*^9, 
   3.740222026097312*^9}, {3.7402220797645407`*^9, 3.740222117868628*^9}, {
   3.740225807988121*^9, 3.7402258186699038`*^9}, 3.740225986746319*^9, {
   3.7402261746651783`*^9, 3.7402261767706223`*^9}, {3.740227299532302*^9, 
   3.7402273030158324`*^9}, {3.7402288240008783`*^9, 
   3.7402288272759485`*^9}, {3.740229149948948*^9, 3.7402291518909636`*^9}, {
   3.740234292419509*^9, 3.740234360994042*^9}, {3.740237702534549*^9, 
   3.740237707304912*^9}, {3.740237968153384*^9, 3.7402379714548216`*^9}, {
   3.7402382146328187`*^9, 3.740238215853938*^9}, {3.740238309214162*^9, 
   3.740238310328921*^9}, {3.740238435338133*^9, 3.740238436242881*^9}, {
   3.74024062687036*^9, 3.7402406287895365`*^9}, {3.740240721336623*^9, 
   3.7402407266516647`*^9}, {3.7402498799865284`*^9, 3.740249918315543*^9}, {
   3.7402513788027463`*^9, 3.7402513790053687`*^9}, {3.740274965175509*^9, 
   3.7402749780277004`*^9}, {3.740277148175356*^9, 3.740277152104887*^9}, {
   3.74027721271776*^9, 3.740277223383428*^9}, {3.7407016184806433`*^9, 
   3.7407016215640497`*^9}, 3.740704605001234*^9, 3.7407046608657026`*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"ce8f6391-5671-4c12-b338-0ce03b0e5905"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coloring of basins based on their connections", "Section",
 CellChangeTimes->{{3.7401569205501494`*^9, 
  3.7401569333702602`*^9}},ExpressionUUID->"5a9bd94c-1360-432a-8c21-\
d701a61099c2"],

Cell["\<\
Defines rules that assign a unique index for all elements of wsc that are in \
connected groups defined by comp\
\>", "Text",
 CellChangeTimes->{{3.740156818780259*^9, 
  3.7401568535565257`*^9}},ExpressionUUID->"de279e6e-4ae4-4a9d-b646-\
1a27c48da351"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{
           RowBox[{"Max", "[", "wsc", "]"}], "+", 
           RowBox[{"2", "i"}], "+", 
           RowBox[{"i", "^", "2"}]}]}], "&"}], ",", 
        RowBox[{"comp", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "@", "comp"}]}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401555395321884`*^9, 3.7401555908434687`*^9}, 
   3.7401563394788666`*^9, {3.740156422248479*^9, 3.740156451418622*^9}, {
   3.740156548388644*^9, 3.7401566943102136`*^9}, {3.740156727756553*^9, 
   3.7401567689499135`*^9}, 3.740156858273015*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"7a8ed64d-9656-4d26-9fee-c954564b8dfb"],

Cell["Dispatch to make it compact and fast", "Text",
 CellChangeTimes->{{3.740156861341797*^9, 
  3.740156880117035*^9}},ExpressionUUID->"8e14f6d7-bd3b-425a-aec0-\
eb447a424c2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dispatch", "=", 
   RowBox[{"Dispatch", "[", "rules", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7401555395321884`*^9, 3.7401555908434687`*^9}, 
   3.7401563394788666`*^9, {3.740156422248479*^9, 3.740156451418622*^9}, {
   3.740156548388644*^9, 3.7401566943102136`*^9}, {3.740156727756553*^9, 
   3.7401567689499135`*^9}, {3.740156858273015*^9, 3.7401568881022253`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"4faa5004-c844-4ad7-a0f7-a1a7ca0f1f14"],

Cell["\<\
Replace the old indexes by a new ones representing the connected basins\
\>", "Text",
 CellChangeTimes->{{3.7401568930401087`*^9, 
  3.74015690613057*^9}},ExpressionUUID->"c40da45b-7805-4a11-bc25-\
371585c10700"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wsc2", "=", 
   RowBox[{"Replace", "[", 
    RowBox[{"wsc", ",", "dispatch", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"wsc2", "//", "Colorize"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7401555395321884`*^9, 3.7401555908434687`*^9}, 
   3.7401563394788666`*^9, {3.740156422248479*^9, 3.740156451418622*^9}, {
   3.740156548388644*^9, 3.7401566943102136`*^9}, {3.740156727756553*^9, 
   3.7401567689499135`*^9}, {3.740156858273015*^9, 3.7401568881022253`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"bcab6407-8c67-4b25-bb9b-57b6c310a619"],

Cell["\<\
Comparison with the MinimumSaliency method with the threshold 0.2\
\>", "Text",
 CellChangeTimes->{{3.740094834171412*^9, 
  3.740094851495105*^9}},ExpressionUUID->"7f73b684-c282-4e92-abe1-\
85b67478a1b8"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"WatershedComponents", "[", 
     RowBox[{"mimg", ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<MinimumSaliency\>\"", ",", " ", "t"}], "}"}]}]}], "]"}], 
    "//", "Colorize"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", "0.2"}], "}"}], ",", "0", ",", "1"}], "}"}], 
       "]"}], ",", " ", "\"\<  minimum boundary height t = \>\"", ",", 
      RowBox[{"Dynamic", "[", 
       RowBox[{"t", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Max", "[", "data", "]"}], "-", 
          RowBox[{"Min", "[", "data", "]"}]}], ")"}]}], "]"}], ",", " ", 
      "\"\< m\>\""}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.739892712795974*^9, 3.739892725904583*^9}, {
   3.739892850556053*^9, 3.7398928717553763`*^9}, 3.739893111903465*^9, {
   3.740088633977331*^9, 3.7400887340794306`*^9}, {3.740094295152835*^9, 
   3.7400947711205025`*^9}, {3.740094819783745*^9, 3.7400948217211714`*^9}, {
   3.7401556270073595`*^9, 3.740155644653567*^9}, {3.7401558034390917`*^9, 
   3.7401558195647197`*^9}, {3.740155873209832*^9, 3.740155877987452*^9}, {
   3.7401559699947586`*^9, 3.740156013732693*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"8304668f-377f-4dd1-857b-916732ef8348"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 7, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 200, 5, 238, "Title",ExpressionUUID->"84c36d7e-0a41-4722-a771-ded2d8bc4104"],
Cell[CellGroupData[{
Cell[808, 31, 190, 3, 99, "Section",ExpressionUUID->"6a114ce8-2b0d-4427-891f-84a8f1fa1f7d"],
Cell[1001, 36, 364, 7, 52, "Text",ExpressionUUID->"4063964a-7d7d-4b3f-9a61-825dabf86c37"],
Cell[1368, 45, 670, 15, 43, "Input",ExpressionUUID->"7e66ddf3-d4b3-4eb3-9d0a-0f9681c16700"],
Cell[2041, 62, 202, 3, 52, "Text",ExpressionUUID->"2f3d79e0-c4a2-4bac-8db1-9a67f8e265fd"],
Cell[2246, 67, 789, 18, 43, "Input",ExpressionUUID->"153e0d7b-adfc-4306-b1db-aadb2ecb91ab"],
Cell[3038, 87, 171, 3, 52, "Text",ExpressionUUID->"5fa4921f-52eb-4542-af7c-16abaed66d8e"],
Cell[3212, 92, 1795, 42, 131, "Input",ExpressionUUID->"3e505f4f-0225-4668-b25d-74055de9c009"],
Cell[5010, 136, 189, 3, 52, "Text",ExpressionUUID->"a7f2cdda-bce6-4257-b06c-aa3b6f9f6efc"],
Cell[5202, 141, 534, 13, 43, "Input",ExpressionUUID->"357ce150-cf01-4259-b7c9-51acb76c8c61"],
Cell[5739, 156, 228, 4, 52, "Text",ExpressionUUID->"24798162-3ac3-4621-8a2a-89c92ac8342a"],
Cell[5970, 162, 343, 8, 43, "Input",ExpressionUUID->"c2cae194-e10b-4af9-8b23-559a29ba4d27"],
Cell[6316, 172, 180, 3, 52, "Text",ExpressionUUID->"36c27535-a030-43b9-97d5-4d04984d66e1"],
Cell[6499, 177, 738, 15, 43, "Input",ExpressionUUID->"9877aaf4-0705-41a2-9687-383277480d5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7274, 197, 222, 5, 99, "Section",ExpressionUUID->"b6a7a8fa-6bf2-4b15-8282-d0b5590707be"],
Cell[7499, 204, 401, 8, 86, "Text",ExpressionUUID->"404276d7-6154-4310-9e65-95fa4d60b9f7"],
Cell[7903, 214, 580, 12, 43, "Input",ExpressionUUID->"bd5e7c41-1866-4a0b-9426-aaff47ad98fd"],
Cell[8486, 228, 188, 3, 52, "Text",ExpressionUUID->"e1a0206c-61a3-4818-bf48-2e634621f9b5"],
Cell[8677, 233, 301, 8, 43, "Input",ExpressionUUID->"d8c4fe48-2ace-4ea9-84df-22cce51b18ff"],
Cell[8981, 243, 231, 6, 52, "Text",ExpressionUUID->"735fa744-c803-4542-bcaa-908af9ad6674"],
Cell[9215, 251, 985, 20, 43, "Input",ExpressionUUID->"6dafd0e4-482e-4e0e-908b-7683dcc3f812"],
Cell[10203, 273, 482, 10, 43, "Input",ExpressionUUID->"a796cefd-9728-4124-84f2-ac97341f0fab"],
Cell[10688, 285, 244, 6, 52, "Text",ExpressionUUID->"2281f902-32da-43ac-99cd-168f771c4692"],
Cell[10935, 293, 1121, 25, 43, "Input",ExpressionUUID->"1b34e5d1-0017-45e0-b865-a14c80e7adda"],
Cell[12059, 320, 170, 3, 52, "Text",ExpressionUUID->"a7a38679-3622-49ab-a7d7-a7627b1ddc71"],
Cell[12232, 325, 747, 18, 43, "Input",ExpressionUUID->"6452fbb2-5310-40cf-9929-be1b697a5238"],
Cell[12982, 345, 317, 7, 52, "Text",ExpressionUUID->"bf23e2c9-5bb0-420d-a8e7-061e76729e9e"],
Cell[13302, 354, 960, 21, 43, "Input",ExpressionUUID->"6052e686-27fe-42dc-8ae7-7713f6b7f761"],
Cell[14265, 377, 342, 7, 52, "Text",ExpressionUUID->"001143e0-c317-43a7-8a3f-87c1fcb2cc08"],
Cell[14610, 386, 1163, 22, 43, "Input",ExpressionUUID->"d06acfbe-92cb-43b9-92c6-73d687f09776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15810, 413, 196, 3, 99, "Section",ExpressionUUID->"3963809f-d3ce-4483-a3a1-fab1b37e1dbe"],
Cell[16009, 418, 229, 5, 52, "Text",ExpressionUUID->"88bf98cc-3e67-4f1e-850d-f9b85a6c6b8a"],
Cell[16241, 425, 712, 14, 43, "Input",ExpressionUUID->"75d68058-ba56-40d6-b80c-bc6c066f9054"],
Cell[16956, 441, 633, 12, 43, "Input",ExpressionUUID->"a140eac7-04fc-4d36-a429-52e96baa3e20"],
Cell[17592, 455, 825, 17, 43, "Input",ExpressionUUID->"7a310784-8bc1-441d-ad79-5617e57a39c2"],
Cell[18420, 474, 194, 3, 52, "Text",ExpressionUUID->"d9e54ad8-ab69-4a50-828c-abb9b6fd4cb1"],
Cell[18617, 479, 720, 20, 43, "Input",ExpressionUUID->"e4254b43-3b80-4fc9-8e6f-d28a782df13b"],
Cell[19340, 501, 246, 6, 52, "Text",ExpressionUUID->"7c9478a6-fe41-4d4c-b29d-418798c4d619"],
Cell[19589, 509, 305, 8, 43, "Input",ExpressionUUID->"3d2fe490-e50a-4453-9ebf-86e4e897d1d2"],
Cell[19897, 519, 193, 3, 52, "Text",ExpressionUUID->"4a236d7b-edd6-4ac2-87c0-ee3b3f9123ce"],
Cell[20093, 524, 706, 14, 43, "Input",ExpressionUUID->"786b800c-9200-4d15-890f-3200befcc4d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20836, 543, 242, 4, 99, "Section",ExpressionUUID->"8cdd11d8-54c3-4f5c-892c-aea5bb7886bd"],
Cell[21081, 549, 468, 9, 52, "Text",ExpressionUUID->"ed3e1286-6dee-4234-902c-9029302ed2f6"],
Cell[21552, 560, 847, 16, 43, "Input",ExpressionUUID->"b12891c6-323d-4a7b-9d6f-48d500b5ec4e"],
Cell[22402, 578, 255, 6, 52, "Text",ExpressionUUID->"fedb846d-f582-487e-a39f-f2d033f2f6ed"],
Cell[22660, 586, 2431, 37, 43, "Input",ExpressionUUID->"d91ab500-67a1-4034-8bb9-3f5905de6ffe"],
Cell[CellGroupData[{
Cell[25116, 627, 233, 4, 80, "Subsection",ExpressionUUID->"91701001-9771-4602-999c-311212602fad"],
Cell[25352, 633, 223, 5, 52, "Text",ExpressionUUID->"b1875d16-451b-4ec9-a3f9-25470d525480"],
Cell[25578, 640, 1402, 29, 43, "Input",ExpressionUUID->"31851280-2fe1-494b-8ee5-d6bc51a47003"],
Cell[26983, 671, 3588, 81, 276, "Input",ExpressionUUID->"f9b1c30e-679f-4b2d-94a6-83ebcc9026c1"],
Cell[30574, 754, 666, 20, 43, "Input",ExpressionUUID->"efffc2c9-a506-4491-a8cc-712f937bd909"],
Cell[31243, 776, 1643, 29, 43, "Input",ExpressionUUID->"950b1b49-866a-43de-aa4a-1d13d82c89ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32935, 811, 232, 4, 99, "Section",ExpressionUUID->"dd015054-9635-4599-a88b-720e758e2a8a"],
Cell[33170, 817, 270, 6, 52, "Text",ExpressionUUID->"3a576616-6237-4268-a6bc-30b6b5aa5400"],
Cell[33443, 825, 2153, 36, 73, "Input",ExpressionUUID->"1fadba66-626c-4803-9a73-5db264ded9e3"],
Cell[35599, 863, 191, 3, 52, "Text",ExpressionUUID->"a579f908-0ccb-426f-81c9-ccb3a982c342"],
Cell[35793, 868, 2381, 34, 43, "Input",ExpressionUUID->"171c450e-fbd4-493c-a780-6b4fad9be6f2"],
Cell[38177, 904, 268, 6, 52, "Text",ExpressionUUID->"8329bc81-46bc-4f8d-be59-6302818e3ce7"],
Cell[38448, 912, 2870, 45, 43, "Input",ExpressionUUID->"ac4de9fc-8233-42ef-9c80-afb4f2cc6cdf"],
Cell[41321, 959, 598, 15, 43, "Input",ExpressionUUID->"c7f38113-a5f0-4ba8-814d-f0b31d89f362"],
Cell[41922, 976, 30812, 505, 140, "Input",ExpressionUUID->"ce8f6391-5671-4c12-b338-0ce03b0e5905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72771, 1486, 194, 3, 99, "Section",ExpressionUUID->"5a9bd94c-1360-432a-8c21-d701a61099c2"],
Cell[72968, 1491, 263, 6, 52, "Text",ExpressionUUID->"de279e6e-4ae4-4a9d-b646-1a27c48da351"],
Cell[73234, 1499, 936, 24, 43, "Input",ExpressionUUID->"7a8ed64d-9656-4d26-9fee-c954564b8dfb"],
Cell[74173, 1525, 178, 3, 52, "Text",ExpressionUUID->"8e14f6d7-bd3b-425a-aec0-eb447a424c2c"],
Cell[74354, 1530, 493, 9, 43, "Input",ExpressionUUID->"4faa5004-c844-4ad7-a0f7-a1a7ca0f1f14"],
Cell[74850, 1541, 222, 5, 52, "Text",ExpressionUUID->"c40da45b-7805-4a11-bc25-371585c10700"],
Cell[75075, 1548, 617, 12, 102, "Input",ExpressionUUID->"bcab6407-8c67-4b25-bb9b-57b6c310a619"],
Cell[75695, 1562, 215, 5, 52, "Text",ExpressionUUID->"7f73b684-c282-4e92-abe1-85b67478a1b8"],
Cell[75913, 1569, 1444, 34, 73, "Input",ExpressionUUID->"8304668f-377f-4dd1-857b-916732ef8348"]
}, Open  ]]
}, Open  ]]
}
]
*)

